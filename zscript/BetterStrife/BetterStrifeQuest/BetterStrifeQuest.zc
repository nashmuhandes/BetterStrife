// Copyright 2021 Nash Muhandes
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
//
// 1. Redistributions of source code must retain the above copyright
//    notice, this list of conditions and the following disclaimer.
// 2. Redistributions in binary form must reproduce the above copyright
//    notice, this list of conditions and the following disclaimer in the
//    documentation and/or other materials provided with the distribution.
// 3. The name of the author may not be used to endorse or promote products
//    derived from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
// IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
// OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
// IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
// NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
// THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

//===========================================================================
//
// BetterStrifeQuest
//
//===========================================================================

class BetterStrifeQuest : Thinker
{
	// Values correspond to the respective log numbers defined in the Strife IWAD.
	// This is the best way I can think of that doesn't force me to invest so much
	// time into defining the quest statuses by hand.
	enum ECurrentQuest
	{
		CQ_FIND_HELP = 0,
		CQ_GET_BELDINS_RING = 1003,
		CQ_FOUND_BELDINS_RING = CQ_GET_BELDINS_RING,
		CQ_LOOK_FOR_FRONT_BASE_1 = 2,
		CQ_LOOK_FOR_FRONT_BASE_2 = 3,
		CQ_LOOK_FOR_FRONT_BASE_3 = 4,
		CQ_TALK_TO_MACIL_1 = 4,
		CQ_VISIT_IRALE_1 = 1006,
		CQ_TALK_TO_GOVERNOR_1 = 1006,
		CQ_TALK_TO_MACGUFFIN = 11,
		CQ_FOUND_BROKEN_COUPLING = 15,
		CQ_DESTROYED_FRONTS_COUPLING = 13,
		CQ_TOOK_OUT_SCANNING_TEAM = 14,
		CQ_FIND_DERWIN = 1008,
		CQ_GOT_DERWINS_EAR = CQ_FIND_DERWIN,
		CQ_GO_TO_PRISON = 1009,
		CQ_TALK_TO_WARDEN = 1009,
		CQ_DONE_TALKING_TO_WARDEN = 1010,
		CQ_BROKE_INTO_PRISON = 18,
		CQ_LOOK_FOR_JUDGE = 19,
		CQ_CUT_JUDGES_HAND = 20,
		CQ_FREED_PRISONERS = 21,
		CQ_TALK_TO_MACIL_2 = CQ_FREED_PRISONERS,
		CQ_DESTROY_THE_POWER_CRYSTAL = 1011,
		CQ_POWER_STATION_TALK_TO_TECHNICIAN = 1012,
		CQ_POWER_STATION_TALK_TO_KETRICK_1 = 1013,
		CQ_POWER_STATION_TALK_TO_KETRICK_2 = 1014,
		CQ_POWER_STATION_GET_OUT = 24,
		CQ_BEFORE_SEWER_MISSION_1 = 25,
		CQ_BEFORE_SEWER_MISSION_2 = 26,
		CQ_LOOK_FOR_WERAN_1 = 28,
		CQ_GET_UNIFORM_FOR_WERAN = 1015,
		CQ_HELPED_WERAN = 1016,
		CQ_DESTROY_CASTLE_GATE_PISTON = 33,
		CQ_DESTROYED_CASTLE_GATE_PISTON = 37,
		CQ_TALK_TO_MACIL_3 = CQ_DESTROYED_CASTLE_GATE_PISTON,
		CQ_ASSAULT_CASTLE = 1017,
		CQ_FIND_PROGRAMMER_1 = 38,
		CQ_KILL_PROGRAMMER = 45,
		CQ_TALK_TO_MACIL_4 = CQ_KILL_PROGRAMMER,
		CQ_SEEK_ORACLE_1 = 1019,
		CQ_SEEK_ORACLE_2 = 48,
		CQ_SEEK_ORACLE_3 = 47,
		CQ_SEEK_ORACLE_4 = 50,
		CQ_GO_TO_KEYMASTER_1 = 1020,
		CQ_GO_TO_KEYMASTER_2 = 56,
		CQ_GOT_KEY_FROM_KEYMASTER = 1021,
		CQ_GO_TO_THE_BAILEY = 57,
		CQ_TALK_TO_QUINCY = 59,
		CQ_GO_TO_SECURITY_COMPLEX = 1022,
		CQ_DONT_GIVE_UP = 64,
		CQ_VERY_IMPRESSIVE = 70,
		CQ_GET_OUT_OF_ADMIN = 211,
		CQ_FIND_THE_BISHOP = 120,
		CQ_KILLED_THE_BISHOP = 74,
		CQ_ENERGY_REPORT_ORACLE = 76,
		CQ_BAD_KILL_MACIL = 1027,
		CQ_BAD_KILLED_MACIL = 79,
		CQ_BAD_KILL_LOREMASTER = 1026,
		CQ_BAD_KILLED_LOREMASTER = 83,
		CQ_FINAL_BATTLE = 85,
		CQ_BAD_KILLED_ORACLE = CQ_FINAL_BATTLE,
		CQ_GOOD_KILL_ORACLE = 1024,
		CQ_GOOD_KILLED_ORACLE = 87,
		CQ_GOOD_FIND_RICHTER = 1028,
		CQ_GOOD_FIND_MINE_KEY_1 = 89,
		CQ_GOOD_FIND_MINE_KEY_2 = 93,
		CQ_GOOD_GOT_MINE_KEY = 95,
		CQ_GOOD_LOOK_FOR_ORE = 96,
		CQ_GOOD_LOOK_FOR_ORE_AND_TRANSMITTER_1 = 97,
		CQ_GOOD_LOOK_FOR_ORE_AND_TRANSMITTER_2 = 99,
		CQ_GOOD_DESTROYED_TRANSMITTER = 100,
		CQ_GOOD_FIND_CONVERSION_CHAPEL = 102,
		CQ_GOOD_DESTROY_CONVERTER = 103,
		CQ_GOOD_DESTROYED_CONVERTER = 104,
		CQ_GOOD_KILLED_MACIL = 106,
		CQ_GOOD_FIND_LAB = CQ_GOOD_KILLED_MACIL,
		CQ_GOOD_KILLED_LOREMASTER = CQ_BAD_KILLED_ORACLE,
	}

	bool initDone;
	int currentQuest;

	//===========================================================================
	//
	//
	//
	//===========================================================================

	BetterStrifeQuest Init(void)
	{
		ChangeStatNum(STAT_STATIC);

		if (!initDone)
		{
			// set the first quest when starting the game
			if (Level.totaltime == 0)
			{
				currentQuest = CQ_FIND_HELP;
			}

			initDone = true;
		}

		return self;
	}

	//===========================================================================
	//
	//
	//
	//===========================================================================

	static clearscope BetterStrifeQuest GetInstance(void)
	{
		ThinkerIterator it = ThinkerIterator.Create("BetterStrifeQuest", STAT_STATIC);
		let p = BetterStrifeQuest(it.Next());
		if (p)
		{
			return p;
		}

		return NULL;
	}

	//===========================================================================
	//
	//
	//
	//===========================================================================

	void SetCurrentQuest(int q)
	{
		currentQuest = q;
	}

	clearscope int GetCurrentQuest(void)
	{
		return currentQuest;
	}
}
