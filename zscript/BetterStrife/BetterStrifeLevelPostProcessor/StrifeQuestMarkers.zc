// Copyright 2021 Nash Muhandes
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
//
// 1. Redistributions of source code must retain the above copyright
//    notice, this list of conditions and the following disclaimer.
// 2. Redistributions in binary form must reproduce the above copyright
//    notice, this list of conditions and the following disclaimer in the
//    documentation and/or other materials provided with the distribution.
// 3. The name of the author may not be used to endorse or promote products
//    derived from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
// IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
// OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
// IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
// NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
// THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

//===========================================================================
//
// Strife: Quest for the Sigil
// Quest markers
//
//===========================================================================

extend class BetterStrifeLevelPostProcessor
{
	void SpawnStrifeQuestMarkers(Name checksum, String mapname)
	{
		int t;
		int p;

		switch (checksum)
		{
		default:
		case 'none':
			return;

		case '92DD353943BE589C175FEFC969597950': // strife1.wad map01 - Sanctuary
			// Beldin
			t = AddThing(16666, (3168, 5584, 0), BetterStrifeQuest.CQ_GET_BELDINS_RING); SetThingArgument(t, BetterStrifeQuestMarker.HideIfQuestItemCheck, 1);

			// Sanctuary exit after getting Beldin's ring
			t = AddThing(16666, (3224, 5080, 0), BetterStrifeQuest.CQ_FOUND_BELDINS_RING); SetThingArgument(t, BetterStrifeQuestMarker.ShowIfQuestItemCheck, 1);

			break;

		case '22DC1F95CD9A03D23467FD638264FFBC': // strife1.wad map02 - Town
			// Rowan (start of the game)
			t = AddThing(16666, (3288, 4040, 0), BetterStrifeQuest.CQ_FIND_HELP);

			// Entrance to Sanctuary
			t = AddThing(16666, (1808, 6048, 0), BetterStrifeQuest.CQ_GET_BELDINS_RING); SetThingArgument(t, BetterStrifeQuestMarker.HideIfQuestItemCheck, 1);

			// Rowan (after getting Beldin's ring)
			t = AddThing(16666, (3288, 4040, 0), BetterStrifeQuest.CQ_FOUND_BELDINS_RING); SetThingArgument(t, BetterStrifeQuestMarker.ShowIfQuestItemCheck, 1);

			// Bridge
			t = AddThing(16666, (1456, 4704, 0), BetterStrifeQuest.CQ_LOOK_FOR_FRONT_BASE_1);

			// Town hall
			t = AddThing(16666, (448, 4320, 0), BetterStrifeQuest.CQ_LOOK_FOR_FRONT_BASE_2);

			// Geoff
			t = AddThing(16666, (16, 3760, 0), BetterStrifeQuest.CQ_LOOK_FOR_FRONT_BASE_3);

			// Irale's shop
			t = AddThing(16666, (32, 5696, 0), BetterStrifeQuest.CQ_VISIT_IRALE_1);

			// Governor (first time)
			t = AddThing(16666, (1728, 3136, 0), BetterStrifeQuest.CQ_TALK_TO_GOVERNOR_1);

			// MacGuffin
			t = AddThing(16666, (3336, 4680, 0), BetterStrifeQuest.CQ_TALK_TO_MACGUFFIN);

			// Governer (after picking up broken coupling)
			t = AddThing(16666, (1728, 3136, 0), BetterStrifeQuest.CQ_FOUND_BROKEN_COUPLING);

			// Town hall (after destroying The Front's coupling)
			t = AddThing(16666, (384, 4160, 0), BetterStrifeQuest.CQ_DESTROYED_FRONTS_COUPLING);

			// Governor (after taking out the scanning team)
			t = AddThing(16666, (1728, 3136, 0), BetterStrifeQuest.CQ_TOOK_OUT_SCANNING_TEAM);

			// Power station entrance (after accepting quest to kill Derwin)
			t = AddThing(16666, (-224, 7648, 0), BetterStrifeQuest.CQ_FIND_DERWIN); SetThingArgument(t, BetterStrifeQuestMarker.HideIfQuestItemCheck, 9);

			// Governor (after getting Derwin's ear)
			t = AddThing(16666, (1728, 3136, 0), BetterStrifeQuest.CQ_GOT_DERWINS_EAR); SetThingArgument(t, BetterStrifeQuestMarker.ShowIfQuestItemCheck, 9);

			// Prison entrance
			t = AddThing(16666, (-784, 5056, 0), BetterStrifeQuest.CQ_GO_TO_PRISON);

			// Power station entrance (after accepting mission from Macil to destroy the power crystal)
			t = AddThing(16666, (-224, 7648, 0), BetterStrifeQuest.CQ_DESTROY_THE_POWER_CRYSTAL);

			// Trainers; Medic and Irale, respectively (after destroying the power crystal and before the sewer mission)
			t = AddThing(16666, (440, 5272, 0), BetterStrifeQuest.CQ_BEFORE_SEWER_MISSION_1);
			t = AddThing(16666, (-48, 5528, 0), BetterStrifeQuest.CQ_BEFORE_SEWER_MISSION_1);
			t = AddThing(16666, (440, 5272, 0), BetterStrifeQuest.CQ_BEFORE_SEWER_MISSION_2);
			t = AddThing(16666, (-48, 5528, 0), BetterStrifeQuest.CQ_BEFORE_SEWER_MISSION_2);

			// Sewer entrance
			t = AddThing(16666, (556, 3272, 0), BetterStrifeQuest.CQ_BEFORE_SEWER_MISSION_2);

			// Guard with uniform (for Weran's quest)
			t = AddThing(16666, (768, 2848, 0), BetterStrifeQuest.CQ_GET_UNIFORM_FOR_WERAN); SetThingArgument(t, BetterStrifeQuestMarker.HideIfQuestItemCheck, 15);

			// Entrance to sewer (after picking up the guard's uniform)
			t = AddThing(16666, (1232, 2720, 0), BetterStrifeQuest.CQ_GET_UNIFORM_FOR_WERAN); SetThingArgument(t, BetterStrifeQuestMarker.ShowIfQuestItemCheck, 15);

			// Irale (after obtaining flamethrower parts
			t = AddThing(16666, (-48, 5528, 0), BetterStrifeQuest.CQ_HELPED_WERAN);

			// Front Base (after destroying the castle gate controls)
			t = AddThing(16666, (-360, 3448, 0), BetterStrifeQuest.CQ_DESTROYED_CASTLE_GATE_CONTROLS);

			// Castle entrance (after accepting castle assault mission)
			t = AddThing(16666, (4736, 4928, 0), BetterStrifeQuest.CQ_ASSAULT_CASTLE);
			t = AddThing(16666, (4736, 4928, 0), BetterStrifeQuest.CQ_FIND_PROGRAMMER_1);

			break;

		case '20C20E1FC803F192613A52A62872BCDE': // strife1.wad map03 - Front Base
			// Macil (first time)
			t = AddThing(16666, (0, 1968, 0), BetterStrifeQuest.CQ_TALK_TO_MACIL_1);

			// Exit to town (after accepting Macil's first mission to talk to the Governor)
			t = AddThing(16666, (1560, 2600, 0), BetterStrifeQuest.CQ_VISIT_IRALE_1);

			// Macil (after freeing the prisoners)
			t = AddThing(16666, (0, 1968, 0), BetterStrifeQuest.CQ_TALK_TO_MACIL_2);

			// Trainers (after accepting the mission to destroy the power crystal)
			t = AddThing(16666, (-824, 2768, 0), BetterStrifeQuest.CQ_DESTROY_THE_POWER_CRYSTAL);
			t = AddThing(16666, (-872, 2288, 0), BetterStrifeQuest.CQ_DESTROY_THE_POWER_CRYSTAL);

			// Exit to town (after accepting the mission to destroy the power crystal)
			t = AddThing(16666, (1560, 2600, 0), BetterStrifeQuest.CQ_DESTROY_THE_POWER_CRYSTAL);

			// Macil (after destroying the gate controls)
			t = AddThing(16666, (0, 1968, 0), BetterStrifeQuest.CQ_TALK_TO_MACIL_3);

			// Exit to town (after accepting castle assault mission)
			t = AddThing(16666, (1560, 2600, 0), BetterStrifeQuest.CQ_ASSAULT_CASTLE);
			t = AddThing(16666, (1560, 2600, 0), BetterStrifeQuest.CQ_FIND_PROGRAMMER_1);

			// Trainers (after accepting castle assault mission)
			t = AddThing(16666, (-824, 2768, 0), BetterStrifeQuest.CQ_ASSAULT_CASTLE);
			t = AddThing(16666, (-872, 2288, 0), BetterStrifeQuest.CQ_ASSAULT_CASTLE);
			t = AddThing(16666, (-824, 2768, 0), BetterStrifeQuest.CQ_FIND_PROGRAMMER_1);
			t = AddThing(16666, (-872, 2288, 0), BetterStrifeQuest.CQ_FIND_PROGRAMMER_1);

			break;

		case '8AB955C176204FC3DC8008A01BDDEE87': // strife1.wad map04 - Power Station
			// Derwin
			t = AddThing(16666, (2272, 4424, 0), BetterStrifeQuest.CQ_FIND_DERWIN); SetThingArgument(t, BetterStrifeQuestMarker.HideIfQuestItemCheck, 9);

			// Exit to town (after getting Derwin's ear)
			t = AddThing(16666, (576, 3040, 0), BetterStrifeQuest.CQ_GOT_DERWINS_EAR); SetThingArgument(t, BetterStrifeQuestMarker.ShowIfQuestItemCheck, 9);

			// Worner
			t = AddThing(16666, (2176, 3712, 0), BetterStrifeQuest.CQ_DESTROY_THE_POWER_CRYSTAL);

			// Front door entrance to reactor core (after getting the passcard from Worner)
			t = AddThing(16666, (-32, 4224, 0), BetterStrifeQuest.CQ_POWER_STATION_TALK_TO_TECHNICIAN);

			// Technician
			t = AddThing(16666, (-1024, 2056, 0), BetterStrifeQuest.CQ_POWER_STATION_TALK_TO_TECHNICIAN);

			// Technician that has the store room key
			t = AddThing(16666, (-384, 4912, 0), BetterStrifeQuest.CQ_POWER_STATION_TALK_TO_TECHNICIAN);

			// Store room
			t = AddThing(16666, (2192, 3456, 0), BetterStrifeQuest.CQ_POWER_STATION_TALK_TO_TECHNICIAN);

			// Switch to computer tech guy
			t = AddThing(16666, (-832, 2464, 0), BetterStrifeQuest.CQ_POWER_STATION_TALK_TO_KETRICK_1);

			// Switch inside suicide room
			t = AddThing(16666, (-400, 3392, 0), BetterStrifeQuest.CQ_POWER_STATION_TALK_TO_KETRICK_1);

			// Terminal that drops the coolant level when destroyed
			t = AddThing(16666, (-2256, 3200, 0), BetterStrifeQuest.CQ_POWER_STATION_TALK_TO_KETRICK_1);

			// Sammis
			t = AddThing(16666, (-2232, 5160, 0), BetterStrifeQuest.CQ_POWER_STATION_TALK_TO_KETRICK_1);

			// Ketrick
			t = AddThing(16666, (-3064, 4224, 0), BetterStrifeQuest.CQ_POWER_STATION_TALK_TO_KETRICK_2); SetThingArgument(t, BetterStrifeQuestMarker.HideIfQuestItemCheck, 14);

			// Power crystal
			t = AddThing(16666, (-2560, 4224, 0), BetterStrifeQuest.CQ_POWER_STATION_TALK_TO_KETRICK_2); SetThingArgument(t, BetterStrifeQuestMarker.HideIfQuestItemCheck, 14);

			// Reactor core doorway (after destroying the power crystal)
			t = AddThing(16666, (-1312, 4224, 0), BetterStrifeQuest.CQ_POWER_STATION_TALK_TO_KETRICK_2); SetThingArgument(t, BetterStrifeQuestMarker.ShowIfQuestItemCheck, 14);

			// Exit to town (after destroying the power crystal)
			t = AddThing(16666, (576, 3040, 0), BetterStrifeQuest.CQ_POWER_STATION_GET_OUT);

			break;

		case '8DC5B4A41E35089C9789F7EC6393A015': // strife1.wad map05 - Prison
			// Warden Montag
			t = AddThing(16666, (832, -272, 0), BetterStrifeQuest.CQ_TALK_TO_WARDEN);

			// Entrance to prison (after talking to the warden)
			t = AddThing(16666, (-368, -640, 0), BetterStrifeQuest.CQ_DONE_TALKING_TO_WARDEN);

			// Door to control area (after crossing the green line and Blackbird says "guess there's no free lunch"
			t = AddThing(16666, (-222, 1730, 0), BetterStrifeQuest.CQ_BROKE_INTO_PRISON);

			// Judge Wolenick
			t = AddThing(16666, (-240, 3792, 0), BetterStrifeQuest.CQ_LOOK_FOR_JUDGE); SetThingArgument(t, BetterStrifeQuestMarker.HideIfQuestItemCheck, 12);

			// Switch to free the prisoners
			t = AddThing(16666, (-64, 1376, 0), BetterStrifeQuest.CQ_CUT_JUDGES_HAND);

			// Teleporter back to The Front Base (after freeing the prisoners)
			t = AddThing(16666, (-3040, 1568, 0), BetterStrifeQuest.CQ_FREED_PRISONERS);

			break;

		case 'ED6BA7CD9388DBC9F30363EF24DBACDF': // strife1.wad map06 - Sewers
			// Weran (first time)
			t = AddThing(16666, (3680, 96, 0), BetterStrifeQuest.CQ_LOOK_FOR_WERAN_1);

			// Exit to town (after accepting Weran's quest to get the uniform)
			t = AddThing(16666, (3440, 1824, 0), BetterStrifeQuest.CQ_GET_UNIFORM_FOR_WERAN); SetThingArgument(t, BetterStrifeQuestMarker.HideIfQuestItemCheck, 15);

			// Weran (after getting the guard's uniform)
			t = AddThing(16666, (3680, 96, 0), BetterStrifeQuest.CQ_GET_UNIFORM_FOR_WERAN); SetThingArgument(t, BetterStrifeQuestMarker.ShowIfQuestItemCheck, 15);

			// Exit to castle reclamation tank (after giving the guard's uniform to Weran)
			t = AddThing(16666, (7200, 1408, 0), BetterStrifeQuest.CQ_HELPED_WERAN); SetThingArgument(t, BetterStrifeQuestMarker.HideIfQuestItemCheck, 16);
			t = AddThing(16666, (7200, 1408, 0), BetterStrifeQuest.CQ_DESTROY_CASTLE_GATE_CONTROLS); SetThingArgument(t, BetterStrifeQuestMarker.HideIfQuestItemCheck, 16);

			// Switch that opens the exit stairway to the castle reclamation tank
			t = AddThing(16666, (7000, 888, 0), BetterStrifeQuest.CQ_DESTROY_CASTLE_GATE_CONTROLS); SetThingArgument(t, BetterStrifeQuestMarker.HideIfQuestItemCheck, 16);

			// Valve that raises access to the gate controls
			t = AddThing(16666, (8400, 3696, 0), BetterStrifeQuest.CQ_DESTROY_CASTLE_GATE_CONTROLS); SetThingArgument(t, BetterStrifeQuestMarker.HideIfQuestItemCheck, 16);

			// Castle gate controls
			t = AddThing(16666, (5952, 3384, 0), BetterStrifeQuest.CQ_DESTROY_CASTLE_GATE_CONTROLS); SetThingArgument(t, BetterStrifeQuestMarker.HideIfQuestItemCheck, 16);

			// Teleporter shortcut back to town (after destroying the gate controls)
			t = AddThing(16666, (6720, 768, 0), BetterStrifeQuest.CQ_DESTROYED_CASTLE_GATE_CONTROLS);

			// Exit to town (after destroying the gate controls)
			t = AddThing(16666, (3440, 1824, 0), BetterStrifeQuest.CQ_DESTROYED_CASTLE_GATE_CONTROLS);

			break;

		case '4A79D4C48352804FAB3557EE423ADAFE': // strife1.wad map07 - Castle
			// Switch that opens the bars to the reclamation tank
			t = AddThing(16666, (-80, -1456, 0), BetterStrifeQuest.CQ_DESTROY_CASTLE_GATE_CONTROLS); SetThingArgument(t, BetterStrifeQuestMarker.HideIfQuestItemCheck, 16);

			// Valve that drains the reclamation tank
			t = AddThing(16666, (-112, 96, 0), BetterStrifeQuest.CQ_DESTROY_CASTLE_GATE_CONTROLS); SetThingArgument(t, BetterStrifeQuestMarker.HideIfQuestItemCheck, 16);

			// Entrance back to the sewers through the reclamation tank
			t = AddThing(16666, (-512, 0, 0), BetterStrifeQuest.CQ_DESTROY_CASTLE_GATE_CONTROLS); SetThingArgument(t, BetterStrifeQuestMarker.HideIfQuestItemCheck, 16);

			// Castle entrance (just entered from the front gate)
			t = AddThing(16666, (-2528, 1856, 0), BetterStrifeQuest.CQ_ASSAULT_CASTLE);

			// False Programmer (computer room)
			t = AddThing(16666, (-1016, 2640, 0), BetterStrifeQuest.CQ_FIND_PROGRAMMER_1);

			// Audience Chamber entrance
			t = AddThing(16666, (2688, 2464, 0), BetterStrifeQuest.CQ_FIND_PROGRAMMER_1);

			// Training Facility entrance
			t = AddThing(16666, (1024, -800, 0), BetterStrifeQuest.CQ_FIND_PROGRAMMER_1);

			// Switches that open the way to The Programmer's Keep
			t = AddThing(16666, (3104, 1168, 0), BetterStrifeQuest.CQ_FIND_PROGRAMMER_1);
			t = AddThing(16666, (3106, 754, 0), BetterStrifeQuest.CQ_FIND_PROGRAMMER_1);

			// Entrance to The Programmer's Keep
			t = AddThing(16666, (4272, 960, 0), BetterStrifeQuest.CQ_FIND_PROGRAMMER_1);

			break;

		case 'D1377FAF42EA65955466169020CE5744': // strife1.wad map08 - Audience Chamber
			// False Programmer (gives silver key)
			t = AddThing(16666, (1216, 2976, 0), BetterStrifeQuest.CQ_FIND_PROGRAMMER_1);

			break;

		case '9DA85A8D59EFE7C8B80A0DF6DD9C40AB': // strife1.wad map09 - Castle: Programmer's Keep
			// The Programmer
			t = AddThing(16666, (5376, 2240, 0), BetterStrifeQuest.CQ_KILL_PROGRAMMER);

			break;

		case '39C594CAC07EE51C80F757DA465FCC94': // strife1.wad map10 - New Front Base
			// Macil (just woke up after killing The Programmer)
			t = AddThing(16666, (4864, 9648, 0), BetterStrifeQuest.CQ_TALK_TO_MACIL_4);

			break;

		case '28CB8D6614024C51C8DB00C7ADBFD857': // strife1.wad map11 - Borderlands
			break;

		case '66375224D5815F4FFCB1AEB9D39DFA8C': // strife1.wad map12 - The Temple of the Oracle
			break;

		case 'FB1FAC7C198518B892EE6A6CD8113548': // strife1.wad map13 - Catacombs
			break;

		case 'EFBF3805358AA81DF2251889BFC5DD78': // strife1.wad map14 - Mines
			break;

		case '8D7A24B169717907DDA8399D8C1655DF': // strife1.wad map15 - Fortress: Administration
			break;

		case 'E3E6ABE44B1C034F19385AD1B19BEC97': // strife1.wad map16 - Fortress: Bishop's Tower
			break;

		case 'F61264F1BCEC279E03BEF14CC45D98AB': // strife1.wad map17 - Fortress: The Bailey
			break;

		case 'E6D6F6266DCB70D2792006D740F43473': // strife1.wad map18 - Fortress: Stores
			break;

		case '1240E48EE30E52D7742DC3785BC0C919': // strife1.wad map19 - Fortress: Security Complex
			break;

		case 'D8B1AB710958A1205098FE224B9189DE': // strife1.wad map20 - Factory: Receiving
			break;

		case 'D5FD90FA7A8133E7BFED682D3D313962': // strife1.wad map21 - Factory: Manufacturing
			break;

		case '088F331310F54154443B15EE81AF8BFD': // strife1.wad map22 - Factory: Forge
			break;

		case '777F7085371D7020872E10089AADB764': // strife1.wad map23 - Order Commons
			break;

		case '935024573889AB8CD873A17B21041857': // strife1.wad map24 - Factory: Conversion Chapel
			break;

		case '08A5B44623FFF504462EDC1CA36B1997': // strife1.wad map25 - Catacombs: Ruined Temple
			break;

		case '85D7183042B90FCC7CCC820FE2FA7B77': // strife1.wad map26 - Proving Grounds
			break;

		case 'BAF651138A21FB03AB920FA626F6E64D': // strife1.wad map27 - The Lab
			break;

		case '840DE1C6C218D9C367E930C89EBDC40A': // strife1.wad map28 - Alien Ship
			break;

		case '775CBC35C0A58326FE87AAD638FF9E2A': // strife1.wad map29 - Entity's Lair
			break;

		case '252AF75417C87B680AD2CA48E52DC716': // strife1.wad map30 - Abandoned Front Base
			break;

		case 'BA63176C687188C5C847306B3F516D3A': // strife1.wad map31 - Training Facility
			// Exit to castle
			t = AddThing(16666, (2368, 1760, 0), BetterStrifeQuest.CQ_FIND_PROGRAMMER_1);

			// Armory
			t = AddThing(16666, (2672, -240, 0), BetterStrifeQuest.CQ_FIND_PROGRAMMER_1);

			// Switch 1
			t = AddThing(16666, (992, -160, 0), BetterStrifeQuest.CQ_FIND_PROGRAMMER_1);

			// Switch 2
			t = AddThing(16666, (1168, 1216, 0), BetterStrifeQuest.CQ_FIND_PROGRAMMER_1);

			// Switch 3
			t = AddThing(16666, (800, 656, 0), BetterStrifeQuest.CQ_FIND_PROGRAMMER_1);

			// Lift
			//t = AddThing(16666, (-720, 1456, 0), BetterStrifeQuest.CQ_FIND_PROGRAMMER_1);

			// Final switch (opens the door to the upgrade)
			t = AddThing(16666, (80, 448, 0), BetterStrifeQuest.CQ_FIND_PROGRAMMER_1);

			// Stat upgrade switch (training complete!)
			t = AddThing(16666, (2176, 624, 0), BetterStrifeQuest.CQ_FIND_PROGRAMMER_1);

			break;

		// The demo version maps included in the commercial Strife IWAD are considered unplayable.
		// No patching needed.
		/*
		case 'BB98350389778448D05D2C45E9EE5061': // strife1.wad map32 - Sanctuary (demo version)
			break;

		case '8E2AA70FBF70C9C68A39A7B0A45480AD': // strife1.wad map33 - Town (demo version)
			break;

		case 'B8B1BFA787E35850EAA95430B0713B88': // strife1.wad map34 - Movement Base (demo version)
			break;
		*/
		}
	}
}
