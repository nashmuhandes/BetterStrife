// Copyright 2021 Nash Muhandes
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
//
// 1. Redistributions of source code must retain the above copyright
//    notice, this list of conditions and the following disclaimer.
// 2. Redistributions in binary form must reproduce the above copyright
//    notice, this list of conditions and the following disclaimer in the
//    documentation and/or other materials provided with the distribution.
// 3. The name of the author may not be used to endorse or promote products
//    derived from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
// IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
// OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
// IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
// NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
// THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

//===========================================================================
//
// BetterStrifeLevelPostProcessor
//
//===========================================================================

class BetterStrifeLevelPostProcessor : LevelPostProcessor
{
	protected void Apply(Name checksum, String mapname)
	{
		SpawnStrifeQuestMarkers(checksum, mapname);
		SpawnSVEQuestMarkers(checksum, mapname);
		//SpawnExtraMerchants(checksum, mapname);
		FixStrifeMaps(checksum, mapname);
	}

	//===========================================================================
	//
	//
	//
	//===========================================================================

	void SpawnExtraMerchants(Name checksum, String mapname)
	{
		int t;
		int p;

		switch (checksum)
		{
		default:
		case 'none':
			return;
		}
	}

	//===========================================================================
	//
	//
	//
	//===========================================================================

	void FixStrifeMaps(Name checksum, String mapname)
	{
		switch (checksum)
		{
		default:
		case 'none':
			return;

		case '4A79D4C48352804FAB3557EE423ADAFE': // strife1.wad map07 - Castle
			// Fix missing textures on the platform just before the entrance to The Programmer's Keep
			SetWallTexture(2778, Line.back, Side.bottom, "CONCRT01");
			SetWallTexture(2779, Line.back, Side.bottom, "CONCRT01");
			SetWallTexture(2780, Line.back, Side.bottom, "CONCRT01");
			SetWallTexture(2781, Line.back, Side.bottom, "CONCRT01");
			SetLineFlags(2778, Line.ML_DONTPEGTOP | Line.ML_DONTPEGBOTTOM);
			SetLineFlags(2779, Line.ML_DONTPEGTOP | Line.ML_DONTPEGBOTTOM);
			SetLineFlags(2780, Line.ML_DONTPEGTOP | Line.ML_DONTPEGBOTTOM);
			SetLineFlags(2781, Line.ML_DONTPEGTOP | Line.ML_DONTPEGBOTTOM);
			break;

		case '28CB8D6614024C51C8DB00C7ADBFD857': // strife1.wad map11 - Borderlands
			// Fix New Front Base teleporter flat offset
			Level.Sectors[224].AddXOffset(Sector.floor, -24.0);
			break;

		case 'E3E6ABE44B1C034F19385AD1B19BEC97': // strife1.wad map16 - Fortress: Bishop's Tower
			// Fix missing textures
			SetWallTexture(2827, Line.back, Side.bottom, "AZWAL04");
			SetWallTexture(2660, Line.back, Side.bottom, "AZWAL04");
			break;

		case '1240E48EE30E52D7742DC3785BC0C919': // strife1.wad map19 - Fortress: Security Complex
			// Fix dead end caused by exiting Administration before destroying the computer
			// https://doomwiki.org/wiki/Strife_dead_ends#Leave_Administration_early
			// Just get rid of the barriers that prevent backtracking from The Bailey
			SetLineSpecial(2249, 0);
			OffsetSectorPlane(8, Sector.ceiling, 8);
			SetSectorTexture(8, Sector.ceiling, "F_GENTAN");
			OffsetSectorPlane(10, Sector.ceiling, 8);
			SetSectorTexture(10, Sector.ceiling, "F_GENTAN");
			ClearSectorTags(8);
			ClearSectorTags(10);
			break;

		case '252AF75417C87B680AD2CA48E52DC716': // strife1.wad map30 - Abandoned Front Base
			// Fix prison teleporter flat offset
			Level.Sectors[38].AddXOffset(Sector.floor, 32.0);
			break;
		}
	}
}
