// Copyright 2021 - 2024 Nash Muhandes
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
//
// 1. Redistributions of source code must retain the above copyright
//    notice, this list of conditions and the following disclaimer.
// 2. Redistributions in binary form must reproduce the above copyright
//    notice, this list of conditions and the following disclaimer in the
//    documentation and/or other materials provided with the distribution.
// 3. The name of the author may not be used to endorse or promote products
//    derived from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
// IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
// OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
// IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
// NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
// THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

//===========================================================================
//
// BetterStrifeLevelPostProcessor
//
//===========================================================================

class BetterStrifeLevelPostProcessor : LevelPostProcessor
{
	protected void Apply(Name checksum, String mapname)
	{
		SpawnStrifeQuestMarkers(checksum, mapname);
		SpawnSVEQuestMarkers(checksum, mapname);
		//SpawnExtraMerchants(checksum, mapname);
		SpawnLiquidSounds(checksum, mapname);
		SpawnTavernAmbience(checksum, mapname);
		FixMaps(checksum, mapname);
	}

	//===========================================================================
	//
	//
	//
	//===========================================================================

	void SpawnExtraMerchants(Name checksum, String mapname)
	{
		int t;
		int p;

		switch (checksum)
		{
		default:
		case 'none':
			return;
		}
	}

	//===========================================================================
	//
	//
	//
	//===========================================================================

	void SpawnLiquidSounds(Name checksum, String mapname)
	{
		int stickInWater = 215;
		int invisibleStick = 15556;
		int slime = 15557;

		switch (checksum)
		{
		default:
		case 'none':
			return;

		case '92DD353943BE589C175FEFC969597950': // strife1.wad map01 - Sanctuary
		case 'E80503C91F1304142FFDF51EEA7A9653': // sve.wad map01 - Sanctuary
			AddThing(invisibleStick, (2296, 5432, 0), 0);
			AddThing(invisibleStick, (2864, 5264, 0), 0);
			AddThing(invisibleStick, (2688, 5824, 0), 0);
			AddThing(invisibleStick, (2416, 6048, 0), 0);
			AddThing(invisibleStick, (2208, 5840, 0), 0);
			AddThing(invisibleStick, (1792, 5632, 0), 0);
			break;

		case '22DC1F95CD9A03D23467FD638264FFBC': // strife1.wad map02 - Town
		case 'A4ABA612A8FE682787DEBEAF70637836': // sve.wad map02 - Town
			AddThing(invisibleStick, (1696, 6240, 0), 0);
			AddThing(slime, (3744, 3712, 0), 0);
			AddThing(slime, (3872, 3712, 0), 0);
			AddThing(slime, (4000, 3712, 0), 0);
			AddThing(slime, (556, 3272, 0), 0);
			AddThing(slime, (3584, 4672, 0), 0);
			AddThing(slime, (3502, 4430, 0), 0);
			AddThing(slime, (3776, 4480, 0), 0);
			AddThing(slime, (3968, 4608, 0), 0);
			AddThing(slime, (3488, 4224, 0), 0);
			AddThing(slime, (3840, 4288, 0), 0);
			AddThing(slime, (4206, 4334, 0), 0);
			AddThing(slime, (3616, 3968, 0), 0);
			AddThing(slime, (3968, 3968, 0), 0);
			AddThing(slime, (3968, 3968, 0), 0);
			AddThing(slime, (3568, 5224, 0), 0);
			AddThing(slime, (3584, 5576, 0), 0);
			AddThing(slime, (3848, 3848, 0), 0);
			AddThing(slime, (3672, 5824, 0), 0);
			AddThing(slime, (3872, 5976, 0), 0);
			AddThing(slime, (3600, 6088, 0), 0);
			AddThing(slime, (3784, 6264, 0), 0);
			break;

		case '20C20E1FC803F192613A52A62872BCDE': // strife1.wad map03 - Front Base
		case '53C6581CB9BC334D6FF0B2E7DAA16944': // sve.wad map03 - Front Base
			AddThing(invisibleStick, (64, 1312, 0), 0);
			AddThing(invisibleStick, (-128, 960, 0), 0);
			break;

		case '8AB955C176204FC3DC8008A01BDDEE87': // strife1.wad map04 - Power Station
		case '4BA20A2DAE4D52196E6B06B142EAE9EB': // sve.wad map04 - Power Station
			AddThing(stickInWater, (2272, 2080, 0), 0);
			AddThing(invisibleStick, (2016, 2592, 0), 0);
			AddThing(invisibleStick, (1728, 2944, 0), 0);
			AddThing(invisibleStick, (2752, 2688, 0), 0);
			AddThing(invisibleStick, (2528, 2848, 0), 0);
			AddThing(invisibleStick, (3328, 2976, 0), 0);
			AddThing(invisibleStick, (3808, 3392, 0), 0);
			AddThing(invisibleStick, (3360, 3616, 0), 0);
			AddThing(invisibleStick, (2816, 3296, 0), 0);
			AddThing(invisibleStick, (2912, 3936, 0), 0);
			AddThing(invisibleStick, (2912, 2400, 0), 0);
			AddThing(invisibleStick, (3360, 2688, 0), 0);
			AddThing(invisibleStick, (4032, 3136, 0), 0);
			AddThing(invisibleStick, (3840, 3680, 0), 0);
			AddThing(invisibleStick, (4288, 3840, 0), 0);
			AddThing(invisibleStick, (4576, 4288, 0), 0);
			AddThing(invisibleStick, (5216, 4224, 0), 0);
			AddThing(invisibleStick, (5216, 4448, 0), 0);
			AddThing(invisibleStick, (5216, 4000, 0), 0);
			AddThing(invisibleStick, (3008, 4224, 0), 0);
			AddThing(invisibleStick, (3616, 4160, 0), 0);
			AddThing(invisibleStick, (4128, 4192, 0), 0);
			AddThing(invisibleStick, (2912, 4640, 0), 0);
			AddThing(invisibleStick, (3296, 4864, 0), 0);
			AddThing(invisibleStick, (2944, 5376, 0), 0);
			AddThing(invisibleStick, (3904, 4672, 0), 0);
			AddThing(invisibleStick, (3776, 5472, 0), 0);
			AddThing(invisibleStick, (2944, 6048, 0), 0);
			AddThing(invisibleStick, (2560, 5664, 0), 0);
			AddThing(invisibleStick, (3360, 5984, 0), 0);
			AddThing(invisibleStick, (4384, 4960, 0), 0);
			AddThing(invisibleStick, (2112, 5952, 0), 0);
			AddThing(invisibleStick, (1792, 5696, 0), 0);
			AddThing(invisibleStick, (1056, 5856, 0), 0);
			AddThing(invisibleStick, (736, 5216, 0), 0);
			AddThing(invisibleStick, (896, 4800, 0), 0);
			AddThing(invisibleStick, (384, 4704, 0), 0);
			AddThing(invisibleStick, (864, 4448, 0), 0);
			AddThing(invisibleStick, (352, 4480, 0), 0);
			AddThing(invisibleStick, (832, 5504, 0), 0);
			AddThing(invisibleStick, (-1376, 5792, 0), 0);
			AddThing(invisibleStick, (-1330, 5614, 0), 0);
			AddThing(invisibleStick, (-1120, 5696, 0), 0);
			AddThing(invisibleStick, (-896, 5760, 0), 0);
			AddThing(invisibleStick, (-914, 5454, 0), 0);
			AddThing(invisibleStick, (-640, 5600, 0), 0);
			AddThing(invisibleStick, (-1120, 5440, 0), 0);
			AddThing(invisibleStick, (-2560, 4416, 0), 0);
			AddThing(invisibleStick, (-2656, 4320, 0), 0);
			AddThing(invisibleStick, (4320, 4288, 0), 0);
			AddThing(invisibleStick, (-2688, 4128, 0), 0);
			AddThing(invisibleStick, (-2560, 4064, 0), 0);
			AddThing(invisibleStick, (-2432, 4128, 0), 0);
			AddThing(104, (-2560, 3808, 0), 0); // waterfall splashes
			AddThing(104, (-2560, 4640, 0), 0); // waterfall splashes
			break;

		case '8DC5B4A41E35089C9789F7EC6393A015': // strife1.wad map05 - Prison
		case 'F46DEB7B2ABEDB9677269B1539F7ABB8': // sve.wad map05 - Prison
			AddThing(slime, (-1312, 256, 0), 0);
			AddThing(slime, (-1408, -64, 0), 0);
			AddThing(slime, (-1746, -242, 0), 0);
			AddThing(slime, (-1760, -800, 0), 0);
			AddThing(slime, (-1440, -992, 0), 0);
			AddThing(slime, (-992, -1280, 0), 0);
			break;

		case 'ED6BA7CD9388DBC9F30363EF24DBACDF': // strife1.wad map06 - Sewers
		case '3F2BC1BA58B80E4CDF1DB031CA454F79': // sve.wad map06 - Sewers
			AddThing(slime, (2926, 2398, 0), 0);
			AddThing(slime, (3040, 2400, 0), 0);
			AddThing(slime, (2926, 2254, 0), 0);
			AddThing(slime, (3166, 2350, 0), 0);
			AddThing(slime, (3040, 2272, 0), 0);
			AddThing(slime, (3326, 2334, 0), 0);
			AddThing(slime, (3438, 2334, 0), 0);
			AddThing(slime, (3694, 2542, 0), 0);
			AddThing(slime, (3630, 2446, 0), 0);
			AddThing(slime, (3566, 2302, 0), 0);
			AddThing(slime, (3774, 2382, 0), 0);
			AddThing(slime, (3678, 2254, 0), 0);
			AddThing(slime, (3966, 2462, 0), 0);
			AddThing(slime, (3982, 2270, 0), 0);
			AddThing(slime, (4190, 2462, 0), 0);
			AddThing(slime, (3488, 1744, 0), 0);
			AddThing(slime, (4190, 2286, 0), 0);
			AddThing(slime, (3648, 1744, 0), 0);
			AddThing(slime, (3472, 1632, 0), 0);
			AddThing(slime, (4494, 2462, 0), 0);
			AddThing(slime, (3552, 1584, 0), 0);
			AddThing(slime, (4302, 2142, 0), 0);
			AddThing(slime, (3648, 1584, 0), 0);
			AddThing(slime, (3472, 1456, 0), 0);
			AddThing(slime, (4510, 2286, 0), 0);
			AddThing(slime, (4382, 2078, 0), 0);
			AddThing(slime, (3662, 1454, 0), 0);
			AddThing(slime, (3968, 1632, 0), 0);
			AddThing(slime, (2990, 1134, 0), 0);
			AddThing(slime, (4750, 2478, 0), 0);
			AddThing(slime, (4590, 2110, 0), 0);
			AddThing(slime, (4478, 1950, 0), 0);
			AddThing(slime, (3310, 1134, 0), 0);
			AddThing(slime, (4366, 1822, 0), 0);
			AddThing(slime, (4718, 2222, 0), 0);
			AddThing(slime, (4990, 2654, 0), 0);
			AddThing(slime, (4192, 1616, 0), 0);
			AddThing(slime, (2944, 960, 0), 0);
			AddThing(slime, (4910, 2350, 0), 0);
			AddThing(slime, (4656, 1952, 0), 0);
			AddThing(slime, (3310, 974, 0), 0);
			AddThing(slime, (5088, 2512, 0), 0);
			AddThing(slime, (4336, 1552, 0), 0);
			AddThing(slime, (4720, 1840, 0), 0);
			AddThing(slime, (3072, 768, 0), 0);
			AddThing(slime, (2958, 718, 0), 0);
			AddThing(slime, (5310, 2686, 0), 0);
			AddThing(slime, (3200, 768, 0), 0);
			AddThing(slime, (3360, 800, 0), 0);
			AddThing(slime, (3136, 672, 0), 0);
			AddThing(slime, (5198, 2254, 0), 0);
			AddThing(slime, (5310, 2398, 0), 0);
			AddThing(slime, (4942, 1758, 0), 0);
			AddThing(slime, (5534, 2718, 0), 0);
			AddThing(slime, (3136, 512, 0), 0);
			AddThing(slime, (4942, 1646, 0), 0);
			AddThing(slime, (5550, 2574, 0), 0);
			AddThing(slime, (5342, 2110, 0), 0);
			AddThing(slime, (5486, 2270, 0), 0);
			AddThing(slime, (5566, 2398, 0), 0);
			AddThing(slime, (3136, 352, 0), 0);
			AddThing(slime, (5134, 1630, 0), 0);
			AddThing(slime, (4446, 974, 0), 0);
			AddThing(slime, (5342, 1902, 0), 0);
			AddThing(slime, (4622, 1102, 0), 0);
			AddThing(slime, (4558, 926, 0), 0);
			AddThing(slime, (5166, 1422, 0), 0);
			AddThing(slime, (4878, 1118, 0), 0);
			AddThing(slime, (5470, 1774, 0), 0);
			AddThing(slime, (5086, 1246, 0), 0);
			AddThing(slime, (4910, 990, 0), 0);
			AddThing(slime, (5438, 1454, 0), 0);
			AddThing(slime, (5726, 1774, 0), 0);
			AddThing(slime, (6350, 3198, 0), 0);
			AddThing(slime, (5662, 1550, 0), 0);
			AddThing(slime, (5294, 1022, 0), 0);
			AddThing(slime, (5534, 1262, 0), 0);
			AddThing(slime, (5214, 846, 0), 0);
			AddThing(slime, (6544, 3168, 0), 0);
			AddThing(slime, (6030, 1742, 0), 0);
			AddThing(slime, (5934, 1550, 0), 0);
			AddThing(slime, (5534, 1038, 0), 0);
			AddThing(slime, (6702, 3118, 0), 0);
			AddThing(slime, (5342, 702, 0), 0);
			AddThing(slime, (6846, 3742, 0), 0);
			AddThing(slime, (6830, 3342, 0), 0);
			AddThing(slime, (6830, 3006, 0), 0);
			AddThing(slime, (6990, 3598, 0), 0);
			AddThing(slime, (5614, 606, 0), 0);
			AddThing(slime, (6958, 2862, 0), 0);
			AddThing(slime, (6942, 2670, 0), 0);
			AddThing(slime, (7102, 3230, 0), 0);
			AddThing(slime, (7134, 3406, 0), 0);
			AddThing(slime, (5790, 574, 0), 0);
			AddThing(slime, (6942, 2414, 0), 0);
			AddThing(slime, (7182, 3022, 0), 0);
			AddThing(slime, (5918, 510, 0), 0);
			AddThing(slime, (7408, 3664, 0), 0);
			AddThing(slime, (7406, 3406, 0), 0);
			AddThing(slime, (7392, 3168, 0), 0);
			AddThing(slime, (7326, 2782, 0), 0);
			AddThing(slime, (6174, 542, 0), 0);
			AddThing(slime, (7374, 2622, 0), 0);
			AddThing(slime, (7342, 2398, 0), 0);
			AddThing(slime, (7614, 3406, 0), 0);
			AddThing(slime, (7614, 3006, 0), 0);
			AddThing(slime, (6446, 542, 0), 0);
			AddThing(slime, (7678, 3246, 0), 0);
			AddThing(slime, (7792, 3616, 0), 0);
			AddThing(slime, (7598, 2542, 0), 0);
			AddThing(slime, (7758, 2782, 0), 0);
			AddThing(slime, (7934, 3742, 0), 0);
			AddThing(slime, (6766, 542, 0), 0);
			AddThing(slime, (7950, 3342, 0), 0);
			AddThing(slime, (7934, 3022, 0), 0);
			AddThing(slime, (7502, 1502, 0), 0);
			AddThing(slime, (7918, 2574, 0), 0);
			AddThing(slime, (7870, 2398, 0), 0);
			AddThing(slime, (7200, 896, 0), 0);
			AddThing(slime, (7406, 1230, 0), 0);
			AddThing(slime, (7022, 510, 0), 0);
			AddThing(slime, (7198, 718, 0), 0);
			AddThing(slime, (7374, 718, 0), 0);
			AddThing(slime, (7806, 1486, 0), 0);
			AddThing(slime, (7198, 446, 0), 0);
			AddThing(slime, (7662, 1166, 0), 0);
			AddThing(slime, (7358, 462, 0), 0);
			AddThing(slime, (8320, 2304, 0), 0);
			AddThing(slime, (7630, 718, 0), 0);
			AddThing(slime, (7742, 878, 0), 0);
			AddThing(slime, (7982, 1246, 0), 0);
			AddThing(slime, (8334, 2014, 0), 0);
			AddThing(slime, (8430, 2238, 0), 0);
			AddThing(slime, (8430, 1870, 0), 0);
			AddThing(slime, (8638, 2478, 0), 0);
			AddThing(slime, (8062, 990, 0), 0);
			AddThing(slime, (7918, 718, 0), 0);
			AddThing(slime, (8638, 2254, 0), 0);
			AddThing(slime, (8334, 1230, 0), 0);
			AddThing(slime, (8608, 1776, 0), 0);
			AddThing(slime, (8878, 2590, 0), 0);
			AddThing(slime, (8542, 1486, 0), 0);
			AddThing(slime, (8318, 990, 0), 0);
			AddThing(slime, (8768, 2080, 0), 0);
			AddThing(slime, (8878, 1758, 0), 0);
			AddThing(slime, (8478, 734, 0), 0);
			AddThing(slime, (8718, 1182, 0), 0);
			AddThing(slime, (8862, 1502, 0), 0);
			AddThing(slime, (9166, 2446, 0), 0);
			AddThing(slime, (8654, 894, 0), 0);
			AddThing(slime, (9182, 2158, 0), 0);
			AddThing(slime, (8974, 1230, 0), 0);
			AddThing(slime, (8750, 702, 0), 0);
			AddThing(slime, (8990, 750, 0), 0);
			AddThing(invisibleStick, (4832, -144, 0), 0);
			AddThing(invisibleStick, (4912, -176, 0), 0);
			AddThing(invisibleStick, (8094, 3294, 0), 0);
			AddThing(invisibleStick, (8112, 3104, 0), 0);
			AddThing(invisibleStick, (8110, 2862, 0), 0);
			AddThing(invisibleStick, (8222, 3166, 0), 0);
			AddThing(invisibleStick, (8350, 3534, 0), 0);
			AddThing(invisibleStick, (8494, 3390, 0), 0);
			AddThing(invisibleStick, (8446, 3070, 0), 0);
			AddThing(invisibleStick, (8398, 2862, 0), 0);
			AddThing(invisibleStick, (8638, 3550, 0), 0);
			AddThing(invisibleStick, (8590, 3182, 0), 0);
			AddThing(invisibleStick, (8670, 3038, 0), 0);
			AddThing(invisibleStick, (8768, 2448, 0), 0);
			AddThing(invisibleStick, (8816, 2352, 0), 0);
			AddThing(invisibleStick, (8926, 2446, 0), 0);
			break;

		case '4A79D4C48352804FAB3557EE423ADAFE': // strife1.wad map07 - Castle
		case 'ECB3421D4C79C67EBC9342E0579F8804': // sve.wad map07 - Castle
			AddThing(slime, (-736, 192, 0), 0);
			AddThing(slime, (-800, 32, 0), 0);
			AddThing(slime, (-800, -128, 0), 0);
			AddThing(slime, (-1234, -434, 0), 0);
			AddThing(slime, (-544, 32, 0), 0);
			AddThing(slime, (-320, 192, 0), 0);
			AddThing(slime, (-288, 32, 0), 0);
			AddThing(slime, (-1202, -626, 0), 0);
			AddThing(slime, (-818, -434, 0), 0);
			AddThing(slime, (-1202, -786, 0), 0);
			AddThing(slime, (-256, -128, 0), 0);
			AddThing(slime, (-818, -626, 0), 0);
			AddThing(slime, (-1010, -818, 0), 0);
			AddThing(slime, (-818, -786, 0), 0);
			AddThing(slime, (-946, -1458, 0), 0);
			AddThing(invisibleStick, (30, 3006, 0), 0);
			AddThing(invisibleStick, (238, 3070, 0), 0);
			AddThing(invisibleStick, (518, 3094, 0), 0);
			AddThing(invisibleStick, (942, 2966, 0), 0);
			AddThing(invisibleStick, (1078, 3062, 0), 0);
			AddThing(invisibleStick, (1126, 2638, 0), 0);
			AddThing(invisibleStick, (1222, 2822, 0), 0);
			AddThing(invisibleStick, (1134, 2342, 0), 0);
			AddThing(invisibleStick, (1110, 1894, 0), 0);
			AddThing(invisibleStick, (1222, 2118, 0), 0);
			AddThing(invisibleStick, (1358, 2510, 0), 0);
			AddThing(invisibleStick, (1214, 1686, 0), 0);
			AddThing(invisibleStick, (1126, 1470, 0), 0);
			AddThing(invisibleStick, (-594, -562, 0), 0);
			AddThing(invisibleStick, (1342, 1926, 0), 0);
			AddThing(invisibleStick, (1334, 1478, 0), 0);
			AddThing(invisibleStick, (-512, -736, 0), 0);
			AddThing(invisibleStick, (-146, -498, 0), 0);
			AddThing(invisibleStick, (1134, 974, 0), 0);
			AddThing(invisibleStick, (-544, -960, 0), 0);
			AddThing(invisibleStick, (-192, -736, 0), 0);
			AddThing(invisibleStick, (1352, 944, 0), 0);
			AddThing(invisibleStick, (1120, 568, 0), 0);
			AddThing(invisibleStick, (1230, 718, 0), 0);
			AddThing(invisibleStick, (96, -672, 0), 0);
			AddThing(invisibleStick, (-402, -1074, 0), 0);
			AddThing(invisibleStick, (-192, -960, 0), 0);
			AddThing(invisibleStick, (302, -594, 0), 0);
			AddThing(invisibleStick, (1112, 256, 0), 0);
			AddThing(invisibleStick, (1200, 376, 0), 0);
			AddThing(invisibleStick, (1070, 142, 0), 0);
			AddThing(invisibleStick, (1360, 456, 0), 0);
			AddThing(invisibleStick, (110, -978, 0), 0);
			AddThing(invisibleStick, (1198, 14, 0), 0);
			AddThing(invisibleStick, (1278, 94, 0), 0);
			AddThing(invisibleStick, (1358, -114, 0), 0);
			AddThing(invisibleStick, (3182, 2406, 0), 0);
			AddThing(invisibleStick, (3294, 2542, 0), 0);
			AddThing(invisibleStick, (3262, 2246, 0), 0);
			AddThing(invisibleStick, (3182, -114, 0), 0);
			AddThing(invisibleStick, (3262, 14, 0), 0);
			AddThing(invisibleStick, (3262, -282, 0), 0);
			break;

		case '9DA85A8D59EFE7C8B80A0DF6DD9C40AB': // strife1.wad map09 - Castle: Programmer's Keep
		case '6CEEF63FBBE4459BA8A0E73DF308E196': // sve.wad map09 - Castle: Programmer's Keep
			AddThing(invisibleStick, (2816, 3168, 0), 0);
			AddThing(invisibleStick, (2944, 3024, 0), 0);
			AddThing(invisibleStick, (2302, 2302, 0), 0);
			AddThing(invisibleStick, (2510, 2318, 0), 0);
			AddThing(invisibleStick, (3008, 2736, 0), 0);
			AddThing(invisibleStick, (2414, 2206, 0), 0);
			AddThing(invisibleStick, (2286, 2094, 0), 0);
			AddThing(invisibleStick, (2526, 2094, 0), 0);
			AddThing(invisibleStick, (3006, 1742, 0), 0);
			AddThing(invisibleStick, (2976, 1408, 0), 0);
			AddThing(invisibleStick, (2800, 1248, 0), 0);
			break;

		case '39C594CAC07EE51C80F757DA465FCC94': // strife1.wad map10 - New Front Base
		case '0A9721C0CF54FF6224FE7D326A2B9B85': // sve.wad map10 - New Front Base
			AddThing(invisibleStick, (2670, 10110, 0), 0);
			AddThing(invisibleStick, (2846, 10174, 0), 0);
			AddThing(invisibleStick, (3150, 10206, 0), 0);
			AddThing(invisibleStick, (3550, 10046, 0), 0);
			AddThing(invisibleStick, (3710, 10174, 0), 0);
			AddThing(invisibleStick, (3710, 10046, 0), 0);
			AddThing(invisibleStick, (3806, 9806, 0), 0);
			AddThing(invisibleStick, (3774, 9374, 0), 0);
			AddThing(invisibleStick, (3966, 9550, 0), 0);
			AddThing(invisibleStick, (3758, 9006, 0), 0);
			AddThing(invisibleStick, (3982, 9134, 0), 0);
			AddThing(invisibleStick, (3854, 8814, 0), 0);
			AddThing(invisibleStick, (3726, 8558, 0), 0);
			AddThing(invisibleStick, (3998, 8606, 0), 0);
			AddThing(invisibleStick, (2062, 6574, 0), 0);
			AddThing(invisibleStick, (2478, 6574, 0), 0);
			AddThing(invisibleStick, (2094, 6350, 0), 0);
			AddThing(invisibleStick, (2414, 6382, 0), 0);
			AddThing(invisibleStick, (2862, 6574, 0), 0);
			AddThing(invisibleStick, (2112, 6144, 0), 0);
			AddThing(invisibleStick, (2894, 6382, 0), 0);
			AddThing(invisibleStick, (2222, 5998, 0), 0);
			AddThing(invisibleStick, (2734, 6126, 0), 0);
			AddThing(invisibleStick, (5774, 9486, 0), 0);
			AddThing(invisibleStick, (5902, 9646, 0), 0);
			AddThing(invisibleStick, (5870, 9358, 0), 0);
			AddThing(invisibleStick, (5806, 6990, 0), 0);
			AddThing(invisibleStick, (5934, 7118, 0), 0);
			AddThing(invisibleStick, (5870, 6830, 0), 0);
			AddThing(slime, (1886, 7278, 0), 0);
			AddThing(slime, (1854, 7198, 0), 0);
			AddThing(slime, (1390, 6654, 0), 0);
			AddThing(slime, (1838, 7022, 0), 0);
			AddThing(slime, (1408, 6480, 0), 0);
			AddThing(slime, (2094, 7102, 0), 0);
			AddThing(slime, (2318, 7294, 0), 0);
			AddThing(slime, (1822, 6638, 0), 0);
			AddThing(slime, (2350, 7198, 0), 0);
			AddThing(slime, (1438, 6270, 0), 0);
			AddThing(slime, (1838, 6494, 0), 0);
			AddThing(slime, (1614, 6286, 0), 0);
			AddThing(slime, (2382, 6990, 0), 0);
			AddThing(slime, (1854, 6270, 0), 0);
			AddThing(slime, (1696, 5648, 0), 0);
			AddThing(slime, (3742, 8094, 0), 0);
			AddThing(slime, (3742, 7790, 0), 0);
			AddThing(slime, (3854, 7934, 0), 0);
			AddThing(slime, (3982, 8062, 0), 0);
			AddThing(slime, (3710, 7246, 0), 0);
			AddThing(slime, (3774, 7390, 0), 0);
			AddThing(slime, (3854, 7582, 0), 0);
			AddThing(slime, (3966, 7806, 0), 0);
			AddThing(slime, (3902, 7310, 0), 0);
			AddThing(slime, (3838, 7102, 0), 0);
			AddThing(slime, (3950, 6990, 0), 0);
			break;

		case '28CB8D6614024C51C8DB00C7ADBFD857': // strife1.wad map11 - Borderlands
		case '1097B8706E00273294389D1FEB5E94A5': // sve.wad map11 - Borderlands
			AddThing(invisibleStick, (-1890, 5086, 0), 0);
			AddThing(invisibleStick, (-2114, 4846, 0), 0);
			AddThing(invisibleStick, (-1986, 4942, 0), 0);
			AddThing(invisibleStick, (-1776, 5104, 0), 0);
			AddThing(invisibleStick, (-2034, 4670, 0), 0);
			AddThing(invisibleStick, (-2130, 4494, 0), 0);
			AddThing(invisibleStick, (-1906, 4398, 0), 0);
			AddThing(invisibleStick, (-1986, 4334, 0), 0);
			AddThing(invisibleStick, (-1922, 4174, 0), 0);
			AddThing(invisibleStick, (-2002, 3982, 0), 0);
			AddThing(invisibleStick, (-1922, 3710, 0), 0);
			AddThing(invisibleStick, (174, 5838, 0), 0);
			AddThing(invisibleStick, (-1858, 3470, 0), 0);
			AddThing(invisibleStick, (158, 5454, 0), 0);
			AddThing(invisibleStick, (430, 5838, 0), 0);
			AddThing(invisibleStick, (318, 5614, 0), 0);
			AddThing(invisibleStick, (-1746, 3406, 0), 0);
			AddThing(invisibleStick, (446, 5438, 0), 0);
			AddThing(invisibleStick, (-1618, 3198, 0), 0);
			AddThing(invisibleStick, (958, 5838, 0), 0);
			AddThing(invisibleStick, (-1362, 3118, 0), 0);
			AddThing(invisibleStick, (-1058, 3278, 0), 0);
			AddThing(invisibleStick, (958, 5438, 0), 0);
			AddThing(invisibleStick, (-658, 3390, 0), 0);
			AddThing(invisibleStick, (1118, 5614, 0), 0);
			AddThing(invisibleStick, (-1008, 3088, 0), 0);
			AddThing(invisibleStick, (1262, 5854, 0), 0);
			AddThing(invisibleStick, (1550, 6526, 0), 0);
			AddThing(invisibleStick, (-1202, 2862, 0), 0);
			AddThing(invisibleStick, (-530, 3294, 0), 0);
			AddThing(invisibleStick, (1262, 5438, 0), 0);
			AddThing(invisibleStick, (-850, 2958, 0), 0);
			AddThing(invisibleStick, (1646, 6094, 0), 0);
			AddThing(invisibleStick, (1742, 6334, 0), 0);
			AddThing(invisibleStick, (-1090, 2686, 0), 0);
			AddThing(invisibleStick, (-322, 3214, 0), 0);
			AddThing(invisibleStick, (1582, 5758, 0), 0);
			AddThing(invisibleStick, (-818, 2766, 0), 0);
			AddThing(invisibleStick, (-530, 2958, 0), 0);
			AddThing(invisibleStick, (1550, 5422, 0), 0);
			AddThing(invisibleStick, (2046, 6526, 0), 0);
			AddThing(invisibleStick, (1742, 5518, 0), 0);
			AddThing(invisibleStick, (2126, 6382, 0), 0);
			AddThing(invisibleStick, (-562, 2574, 0), 0);
			AddThing(invisibleStick, (2142, 5486, 0), 0);
			AddThing(invisibleStick, (2526, 6350, 0), 0);
			AddThing(invisibleStick, (2654, 6574, 0), 0);
			AddThing(invisibleStick, (2526, 6142, 0), 0);
			AddThing(invisibleStick, (2190, 5246, 0), 0);
			AddThing(invisibleStick, (2766, 6686, 0), 0);
			AddThing(invisibleStick, (2526, 5886, 0), 0);
			AddThing(invisibleStick, (2750, 6334, 0), 0);
			AddThing(invisibleStick, (2544, 5584, 0), 0);
			AddThing(invisibleStick, (2464, 5344, 0), 0);
			AddThing(invisibleStick, (2766, 5998, 0), 0);
			AddThing(invisibleStick, (2782, 5582, 0), 0);
			AddThing(invisibleStick, (2782, 5230, 0), 0);
			AddThing(invisibleStick, (-178, 1182, 0), 0);
			AddThing(invisibleStick, (190, 1070, 0), 0);
			AddThing(invisibleStick, (478, 990, 0), 0);
			AddThing(invisibleStick, (958, 942, 0), 0);
			AddThing(invisibleStick, (1296, 1024, 0), 0);
			AddThing(invisibleStick, (1614, 1134, 0), 0);
			AddThing(invisibleStick, (1806, 1230, 0), 0);
			AddThing(invisibleStick, (1920, 1312, 0), 0);
			break;

		case '66375224D5815F4FFCB1AEB9D39DFA8C': // strife1.wad map12 - The Temple of the Oracle
		case 'C40C878D00E0BC8F7CF3D08DBDDBC36A': // sve.wad map12 - The Temple of the Oracle
			AddThing(invisibleStick, (-962, 5822, 0), 0);
			AddThing(invisibleStick, (-978, 5486, 0), 0);
			AddThing(invisibleStick, (-800, 5616, 0), 0);
			AddThing(invisibleStick, (-818, 5342, 0), 0);
			AddThing(invisibleStick, (-562, 5966, 0), 0);
			AddThing(invisibleStick, (-578, 5822, 0), 0);
			AddThing(invisibleStick, (-834, 5086, 0), 0);
			AddThing(invisibleStick, (-578, 5454, 0), 0);
			AddThing(invisibleStick, (-338, 5614, 0), 0);
			AddThing(invisibleStick, (-178, 5790, 0), 0);
			AddThing(invisibleStick, (-322, 5262, 0), 0);
			AddThing(invisibleStick, (-178, 5486, 0), 0);
			AddThing(invisibleStick, (-1778, 2366, 0), 0);
			AddThing(invisibleStick, (-1490, 2222, 0), 0);
			AddThing(invisibleStick, (-1874, 2014, 0), 0);
			AddThing(invisibleStick, (-1234, 2206, 0), 0);
			AddThing(invisibleStick, (-1058, 2062, 0), 0);
			AddThing(invisibleStick, (-1858, 1662, 0), 0);
			AddThing(invisibleStick, (-1586, 1662, 0), 0);
			AddThing(invisibleStick, (-1058, 1870, 0), 0);
			AddThing(invisibleStick, (-1314, 1630, 0), 0);
			AddThing(invisibleStick, (-818, 1790, 0), 0);
			AddThing(invisibleStick, (-754, 1598, 0), 0);
			AddThing(invisibleStick, (-866, 1502, 0), 0);
			AddThing(invisibleStick, (-946, 1406, 0), 0);
			AddThing(invisibleStick, (-546, 1518, 0), 0);
			AddThing(invisibleStick, (-418, 1534, 0), 0);
			AddThing(invisibleStick, (1310, 2942, 0), 0);
			AddThing(invisibleStick, (-338, 1390, 0), 0);
			AddThing(invisibleStick, (-50, 1534, 0), 0);
			AddThing(invisibleStick, (-162, 1390, 0), 0);
			AddThing(invisibleStick, (1518, 2926, 0), 0);
			AddThing(invisibleStick, (1262, 2462, 0), 0);
			AddThing(invisibleStick, (1710, 3038, 0), 0);
			AddThing(invisibleStick, (702, 1806, 0), 0);
			AddThing(invisibleStick, (1646, 2766, 0), 0);
			AddThing(invisibleStick, (1518, 2510, 0), 0);
			AddThing(invisibleStick, (638, 1550, 0), 0);
			AddThing(invisibleStick, (1822, 2782, 0), 0);
			AddThing(invisibleStick, (1726, 2574, 0), 0);
			AddThing(invisibleStick, (878, 1614, 0), 0);
			AddThing(invisibleStick, (1598, 2302, 0), 0);
			AddThing(invisibleStick, (1406, 2062, 0), 0);
			AddThing(invisibleStick, (1118, 1694, 0), 0);
			AddThing(invisibleStick, (2094, 2846, 0), 0);
			AddThing(invisibleStick, (238, 926, 0), 0);
			AddThing(invisibleStick, (1886, 2462, 0), 0);
			AddThing(invisibleStick, (880, 1344, 0), 0);
			AddThing(invisibleStick, (1822, 2302, 0), 0);
			AddThing(invisibleStick, (2046, 2462, 0), 0);
			AddThing(invisibleStick, (2190, 2654, 0), 0);
			AddThing(invisibleStick, (1198, 1486, 0), 0);
			AddThing(invisibleStick, (1694, 1982, 0), 0);
			AddThing(invisibleStick, (480, 880, 0), 0);
			AddThing(invisibleStick, (862, 1134, 0), 0);
			AddThing(invisibleStick, (1870, 2126, 0), 0);
			AddThing(invisibleStick, (2014, 2238, 0), 0);
			AddThing(invisibleStick, (1182, 1310, 0), 0);
			AddThing(invisibleStick, (2206, 2398, 0), 0);
			AddThing(invisibleStick, (1710, 1774, 0), 0);
			AddThing(invisibleStick, (782, 910, 0), 0);
			AddThing(invisibleStick, (1534, 1438, 0), 0);
			AddThing(invisibleStick, (1694, 1598, 0), 0);
			AddThing(invisibleStick, (1182, 862, 0), 0);
			AddThing(invisibleStick, (1712, 1296, 0), 0);
			AddThing(invisibleStick, (1502, 1006, 0), 0);
			AddThing(invisibleStick, (1678, 862, 0), 0);
			AddThing(invisibleStick, (1374, 526, 0), 0);
			AddThing(invisibleStick, (1550, 670, 0), 0);
			AddThing(invisibleStick, (1822, 606, 0), 0);
			AddThing(invisibleStick, (1440, -64, 0), 0);
			AddThing(invisibleStick, (1630, 30, 0), 0);
			break;

		case 'FB1FAC7C198518B892EE6A6CD8113548': // strife1.wad map13 - Catacombs
		case '9AD30A0C668A0106AA827E7F716295E8': // sve.wad map13 - Catacombs
			AddThing(invisibleStick, (-1010, 2830, 0), 0);
			AddThing(invisibleStick, (-706, 3278, 0), 0);
			AddThing(invisibleStick, (-818, 3022, 0), 0);
			AddThing(invisibleStick, (-370, 3870, 0), 0);
			AddThing(invisibleStick, (-274, 4110, 0), 0);
			AddThing(invisibleStick, (-466, 3470, 0), 0);
			AddThing(invisibleStick, (-674, 3006, 0), 0);
			AddThing(invisibleStick, (-752, 2832, 0), 0);
			AddThing(invisibleStick, (-290, 3646, 0), 0);
			AddThing(invisibleStick, (-642, 2590, 0), 0);
			AddThing(invisibleStick, (-322, 2750, 0), 0);
			AddThing(invisibleStick, (-306, 2558, 0), 0);
			AddThing(invisibleStick, (-386, 2126, 0), 0);
			AddThing(invisibleStick, (-1250, 1054, 0), 0);
			AddThing(invisibleStick, (-354, 2014, 0), 0);
			AddThing(invisibleStick, (-418, 1886, 0), 0);
			AddThing(invisibleStick, (-146, 2094, 0), 0);
			AddThing(invisibleStick, (-1234, 798, 0), 0);
			AddThing(invisibleStick, (-1282, 638, 0), 0);
			AddThing(invisibleStick, (-114, 1854, 0), 0);
			AddThing(invisibleStick, (-370, 1470, 0), 0);
			AddThing(invisibleStick, (142, 2110, 0), 0);
			AddThing(invisibleStick, (-498, 1214, 0), 0);
			AddThing(invisibleStick, (-562, 1054, 0), 0);
			AddThing(invisibleStick, (-1250, 414, 0), 0);
			AddThing(invisibleStick, (-386, 1230, 0), 0);
			AddThing(invisibleStick, (142, 1854, 0), 0);
			AddThing(invisibleStick, (318, 2110, 0), 0);
			AddThing(invisibleStick, (-1810, -114, 0), 0);
			AddThing(invisibleStick, (-1266, 222, 0), 0);
			AddThing(invisibleStick, (-130, 1278, 0), 0);
			AddThing(invisibleStick, (-546, 814, 0), 0);
			AddThing(invisibleStick, (270, 1806, 0), 0);
			AddThing(invisibleStick, (-1602, -66, 0), 0);
			AddThing(invisibleStick, (-1426, 46, 0), 0);
			AddThing(invisibleStick, (-1936, -288, 0), 0);
			AddThing(invisibleStick, (110, 1486, 0), 0);
			AddThing(invisibleStick, (-1026, 174, 0), 0);
			AddThing(invisibleStick, (-1872, -432, 0), 0);
			AddThing(invisibleStick, (318, 1550, 0), 0);
			AddThing(invisibleStick, (-1312, -160, 0), 0);
			AddThing(invisibleStick, (-370, 638, 0), 0);
			AddThing(invisibleStick, (-530, 446, 0), 0);
			AddThing(invisibleStick, (-1074, -34, 0), 0);
			AddThing(invisibleStick, (286, 1310, 0), 0);
			AddThing(invisibleStick, (-1922, -642, 0), 0);
			AddThing(invisibleStick, (-1746, -674, 0), 0);
			AddThing(invisibleStick, (-1586, -594, 0), 0);
			AddThing(invisibleStick, (-178, 494, 0), 0);
			AddThing(invisibleStick, (-290, 350, 0), 0);
			AddThing(invisibleStick, (286, 974, 0), 0);
			AddThing(invisibleStick, (-1410, -594, 0), 0);
			AddThing(invisibleStick, (110, 702, 0), 0);
			AddThing(invisibleStick, (-338, 174, 0), 0);
			AddThing(invisibleStick, (-2, 302, 0), 0);
			AddThing(invisibleStick, (510, 814, 0), 0);
			AddThing(invisibleStick, (334, 478, 0), 0);
			AddThing(invisibleStick, (-962, -722, 0), 0);
			AddThing(invisibleStick, (-770, -594, 0), 0);
			AddThing(invisibleStick, (-1186, -1058, 0), 0);
			AddThing(invisibleStick, (-402, -498, 0), 0);
			AddThing(invisibleStick, (334, 158, 0), 0);
			AddThing(invisibleStick, (-1026, -994, 0), 0);
			AddThing(invisibleStick, (158, -50, 0), 0);
			AddThing(invisibleStick, (670, 478, 0), 0);
			AddThing(invisibleStick, (-594, -738, 0), 0);
			AddThing(invisibleStick, (894, 718, 0), 0);
			AddThing(invisibleStick, (-882, -1074, 0), 0);
			AddThing(invisibleStick, (-1058, -1218, 0), 0);
			AddThing(invisibleStick, (670, 158, 0), 0);
			AddThing(invisibleStick, (-242, -738, 0), 0);
			AddThing(invisibleStick, (462, -162, 0), 0);
			AddThing(invisibleStick, (302, -322, 0), 0);
			AddThing(invisibleStick, (990, 334, 0), 0);
			AddThing(invisibleStick, (1454, 926, 0), 0);
			AddThing(invisibleStick, (1198, 494, 0), 0);
			AddThing(invisibleStick, (-178, -978, 0), 0);
			AddThing(invisibleStick, (302, -626, 0), 0);
			AddThing(invisibleStick, (1662, 910, 0), 0);
			AddThing(invisibleStick, (-450, -1298, 0), 0);
			AddThing(invisibleStick, (910, -98, 0), 0);
			AddThing(invisibleStick, (-274, -1186, 0), 0);
			AddThing(invisibleStick, (1470, 510, 0), 0);
			AddThing(invisibleStick, (494, -594, 0), 0);
			AddThing(invisibleStick, (462, -738, 0), 0);
			AddThing(invisibleStick, (302, -898, 0), 0);
			AddThing(invisibleStick, (94, -1122, 0), 0);
			AddThing(invisibleStick, (1518, 334, 0), 0);
			AddThing(invisibleStick, (14, -1298, 0), 0);
			AddThing(invisibleStick, (766, -706, 0), 0);
			AddThing(invisibleStick, (286, -1154, 0), 0);
			AddThing(invisibleStick, (446, -1074, 0), 0);
			AddThing(invisibleStick, (1614, 62, 0), 0);
			AddThing(invisibleStick, (766, -930, 0), 0);
			AddThing(invisibleStick, (398, -1282, 0), 0);
			AddThing(invisibleStick, (1022, -722, 0), 0);
			AddThing(invisibleStick, (1822, 206, 0), 0);
			AddThing(invisibleStick, (670, -1074, 0), 0);
			AddThing(invisibleStick, (1518, -258, 0), 0);
			AddThing(invisibleStick, (1310, -546, 0), 0);
			AddThing(invisibleStick, (638, -1298, 0), 0);
			AddThing(invisibleStick, (910, -1058, 0), 0);
			AddThing(invisibleStick, (462, -1458, 0), 0);
			AddThing(invisibleStick, (288, -1616, 0), 0);
			AddThing(invisibleStick, (1310, -818, 0), 0);
			AddThing(invisibleStick, (1566, -546, 0), 0);
			AddThing(invisibleStick, (1214, -1074, 0), 0);
			break;

		case 'EFBF3805358AA81DF2251889BFC5DD78': // strife1.wad map14 - Mines
		case 'B60C0A9027557B2B982EAE60940ED95F': // sve.wad map14 - Mines
			AddThing(invisibleStick, (-1058, -1218, 0), 0);
			AddThing(invisibleStick, (-880, -1360, 0), 0);
			AddThing(invisibleStick, (-912, -1568, 0), 0);
			AddThing(invisibleStick, (-658, -1426, 0), 0);
			AddThing(invisibleStick, (-688, -1664, 0), 0);
			AddThing(invisibleStick, (-560, -1760, 0), 0);
			break;

		case '8D7A24B169717907DDA8399D8C1655DF': // strife1.wad map15 - Fortress: Administration
		case '6F9569FFFF0C1405DC04385CDB3436E6': // sve.wad map15 - Fortress: Administration
			AddThing(invisibleStick, (3070, 1870, 0), 0);
			AddThing(invisibleStick, (3342, 2062, 0), 0);
			AddThing(invisibleStick, (3630, 2158, 0), 0);
			AddThing(invisibleStick, (3296, 1760, 0), 0);
			AddThing(invisibleStick, (3534, 1742, 0), 0);
			AddThing(invisibleStick, (3376, 1504, 0), 0);
			AddThing(invisibleStick, (3806, 1934, 0), 0);
			AddThing(invisibleStick, (3998, 2158, 0), 0);
			AddThing(invisibleStick, (4382, 2798, 0), 0);
			AddThing(invisibleStick, (4414, 2478, 0), 0);
			AddThing(invisibleStick, (3998, 1742, 0), 0);
			AddThing(invisibleStick, (4608, 2896, 0), 0);
			AddThing(invisibleStick, (4574, 2190, 0), 0);
			AddThing(invisibleStick, (4752, 2464, 0), 0);
			AddThing(invisibleStick, (4912, 2896, 0), 0);
			AddThing(invisibleStick, (5022, 2670, 0), 0);
			AddThing(invisibleStick, (3870, 798, 0), 0);
			AddThing(invisibleStick, (5166, 2926, 0), 0);
			AddThing(invisibleStick, (5310, 2702, 0), 0);
			AddThing(invisibleStick, (5246, 2446, 0), 0);
			AddThing(invisibleStick, (4174, 766, 0), 0);
			AddThing(invisibleStick, (3950, 510, 0), 0);
			AddThing(invisibleStick, (5470, 2878, 0), 0);
			AddThing(invisibleStick, (5470, 2526, 0), 0);
			AddThing(invisibleStick, (4462, 782, 0), 0);
			AddThing(invisibleStick, (5374, 2078, 0), 0);
			AddThing(invisibleStick, (3918, 206, 0), 0);
			AddThing(invisibleStick, (5502, 2238, 0), 0);
			AddThing(invisibleStick, (4590, 526, 0), 0);
			AddThing(invisibleStick, (4094, -18, 0), 0);
			AddThing(invisibleStick, (4414, 238, 0), 0);
			AddThing(invisibleStick, (4542, 126, 0), 0);
			AddThing(invisibleStick, (4910, 398, 0), 0);
			AddThing(invisibleStick, (4382, -178, 0), 0);
			AddThing(invisibleStick, (4830, 62, 0), 0);
			AddThing(invisibleStick, (4846, -226, 0), 0);
			AddThing(invisibleStick, (6126, 1102, 0), 0);
			AddThing(invisibleStick, (6078, 782, 0), 0);
			AddThing(invisibleStick, (3422, -1506, 0), 0);
			AddThing(invisibleStick, (6462, 1214, 0), 0);
			AddThing(invisibleStick, (3662, -1650, 0), 0);
			AddThing(invisibleStick, (3472, -1808, 0), 0);
			AddThing(invisibleStick, (6798, 1262, 0), 0);
			AddThing(invisibleStick, (6494, 686, 0), 0);
			AddThing(invisibleStick, (7006, 1326, 0), 0);
			AddThing(invisibleStick, (3616, -2032, 0), 0);
			AddThing(invisibleStick, (6558, 350, 0), 0);
			AddThing(invisibleStick, (6734, 558, 0), 0);
			AddThing(invisibleStick, (7198, 1182, 0), 0);
			AddThing(invisibleStick, (6974, 590, 0), 0);
			AddThing(invisibleStick, (6334, -466, 0), 0);
			AddThing(invisibleStick, (6622, -178, 0), 0);
			AddThing(invisibleStick, (7214, 718, 0), 0);
			AddThing(invisibleStick, (6558, -386, 0), 0);
			break;

		case 'F61264F1BCEC279E03BEF14CC45D98AB': // strife1.wad map17 - Fortress: The Bailey
		case '8317A4026000931CAC5CB185582B4EDC': // sve.wad map17 - Fortress: The Bailey
			AddThing(invisibleStick, (-1474, 2614, 0), 0);
			AddThing(invisibleStick, (-1314, 2830, 0), 0);
			AddThing(invisibleStick, (374, 1294, 0), 0);
			AddThing(invisibleStick, (552, 1480, 0), 0);
			AddThing(invisibleStick, (560, 1312, 0), 0);
			AddThing(invisibleStick, (568, 1120, 0), 0);
			AddThing(invisibleStick, (734, 1326, 0), 0);
			AddThing(invisibleStick, (1942, 1702, 0), 0);
			AddThing(invisibleStick, (2054, 854, 0), 0);
			AddThing(invisibleStick, (2046, 718, 0), 0);
			AddThing(invisibleStick, (2040, 512, 0), 0);
			break;

		case 'D8B1AB710958A1205098FE224B9189DE': // strife1.wad map20 - Factory: Receiving
		case 'C6BFC4A41F739A30A4AC09DEE895DCE3': // sve.wad map20 - Factory: Receiving
			AddThing(invisibleStick, (-810, -618, 0), 0);
			AddThing(invisibleStick, (-810, -770, 0), 0);
			AddThing(invisibleStick, (-618, -626, 0), 0);
			AddThing(invisibleStick, (-610, -874, 0), 0);
			AddThing(invisibleStick, (-794, -1394, 0), 0);
			AddThing(invisibleStick, (-610, -1050, 0), 0);
			AddThing(invisibleStick, (-426, -610, 0), 0);
			AddThing(invisibleStick, (-434, -810, 0), 0);
			AddThing(invisibleStick, (-608, -1552, 0), 0);
			AddThing(invisibleStick, (-770, -1882, 0), 0);
			AddThing(invisibleStick, (-458, -1370, 0), 0);
			AddThing(invisibleStick, (-98, -618, 0), 0);
			AddThing(invisibleStick, (-434, -1594, 0), 0);
			AddThing(invisibleStick, (-82, -850, 0), 0);
			AddThing(invisibleStick, (-458, -1874, 0), 0);
			AddThing(invisibleStick, (158, -634, 0), 0);
			AddThing(invisibleStick, (-34, -1354, 0), 0);
			AddThing(invisibleStick, (88, -1056, 0), 0);
			AddThing(invisibleStick, (182, -866, 0), 0);
			AddThing(invisibleStick, (-82, -1666, 0), 0);
			AddThing(invisibleStick, (-66, -1866, 0), 0);
			AddThing(invisibleStick, (198, -1266, 0), 0);
			AddThing(invisibleStick, (398, -618, 0), 0);
			AddThing(invisibleStick, (174, -1554, 0), 0);
			AddThing(invisibleStick, (382, -1026, 0), 0);
			AddThing(invisibleStick, (374, -1266, 0), 0);
			AddThing(invisibleStick, (382, -1490, 0), 0);
			AddThing(invisibleStick, (342, -1866, 0), 0);
			AddThing(invisibleStick, (-722, -3578, 0), 0);
			AddThing(invisibleStick, (334, -1994, 0), 0);
			AddThing(invisibleStick, (-458, -3466, 0), 0);
			AddThing(invisibleStick, (494, -1922, 0), 0);
			AddThing(invisibleStick, (-882, -4018, 0), 0);
			AddThing(invisibleStick, (480, -2160, 0), 0);
			AddThing(invisibleStick, (-248, -3584, 0), 0);
			AddThing(invisibleStick, (-618, -4114, 0), 0);
			AddThing(invisibleStick, (-66, -3490, 0), 0);
			AddThing(invisibleStick, (-826, -4522, 0), 0);
			AddThing(invisibleStick, (766, -2458, 0), 0);
			AddThing(invisibleStick, (766, -2666, 0), 0);
			AddThing(invisibleStick, (222, -3570, 0), 0);
			AddThing(invisibleStick, (934, -2562, 0), 0);
			AddThing(invisibleStick, (-554, -4690, 0), 0);
			AddThing(invisibleStick, (104, -4000, 0), 0);
			AddThing(invisibleStick, (-240, -4504, 0), 0);
			AddThing(invisibleStick, (1134, -2570, 0), 0);
			AddThing(invisibleStick, (1334, -2346, 0), 0);
			AddThing(invisibleStick, (350, -4034, 0), 0);
			AddThing(invisibleStick, (1334, -2434, 0), 0);
			AddThing(invisibleStick, (1406, -2562, 0), 0);
			AddThing(invisibleStick, (14, -4658, 0), 0);
			AddThing(invisibleStick, (1518, -2666, 0), 0);
			AddThing(invisibleStick, (310, -4506, 0), 0);
			AddThing(invisibleStick, (2262, -874, 0), 0);
			AddThing(invisibleStick, (1742, -2650, 0), 0);
			AddThing(invisibleStick, (2286, -1186, 0), 0);
			AddThing(invisibleStick, (1742, -2738, 0), 0);
			AddThing(invisibleStick, (2254, -1506, 0), 0);
			AddThing(invisibleStick, (1758, -2826, 0), 0);
			AddThing(invisibleStick, (1958, -2634, 0), 0);
			AddThing(invisibleStick, (2280, -1816, 0), 0);
			AddThing(invisibleStick, (2542, -866, 0), 0);
			AddThing(invisibleStick, (2238, -2098, 0), 0);
			AddThing(invisibleStick, (2278, -2338, 0), 0);
			AddThing(invisibleStick, (2718, -914, 0), 0);
			AddThing(invisibleStick, (2750, -810, 0), 0);
			AddThing(invisibleStick, (2238, -2602, 0), 0);
			break;

		case 'D5FD90FA7A8133E7BFED682D3D313962': // strife1.wad map21 - Factory: Manufacturing
		case 'B368A6D674B81B650DC37C8643BC9AA4': // sve.wad map21 - Factory: Manufacturing
			AddThing(invisibleStick, (-2922, 4430, 0), 0);
			AddThing(invisibleStick, (-2746, 4494, 0), 0);
			AddThing(invisibleStick, (-2930, 4150, 0), 0);
			AddThing(invisibleStick, (-2818, 4094, 0), 0);
			AddThing(invisibleStick, (-2378, 4470, 0), 0);
			AddThing(invisibleStick, (-2514, 4038, 0), 0);
			AddThing(invisibleStick, (-2162, 4326, 0), 0);
			AddThing(invisibleStick, (-2274, 4086, 0), 0);
			AddThing(invisibleStick, (-2290, 3910, 0), 0);
			AddThing(invisibleStick, (-1706, 4494, 0), 0);
			AddThing(invisibleStick, (-1490, 4198, 0), 0);
			AddThing(invisibleStick, (-1170, 4198, 0), 0);
			AddThing(invisibleStick, (-2146, 2470, 0), 0);
			AddThing(invisibleStick, (-2162, 2150, 0), 0);
			AddThing(invisibleStick, (-1458, 2574, 0), 0);
			AddThing(invisibleStick, (-1994, 1982, 0), 0);
			AddThing(invisibleStick, (-2602, 1342, 0), 0);
			AddThing(invisibleStick, (-874, 3238, 0), 0);
			AddThing(invisibleStick, (-1490, 2294, 0), 0);
			AddThing(invisibleStick, (-1714, 1982, 0), 0);
			AddThing(invisibleStick, (-2562, 1222, 0), 0);
			AddThing(invisibleStick, (-1538, 2094, 0), 0);
			AddThing(invisibleStick, (-658, 3262, 0), 0);
			AddThing(invisibleStick, (-2266, 1350, 0), 0);
			AddThing(invisibleStick, (-2434, 1166, 0), 0);
			AddThing(invisibleStick, (-850, 2814, 0), 0);
			AddThing(invisibleStick, (-2282, 1214, 0), 0);
			AddThing(invisibleStick, (-866, 2390, 0), 0);
			AddThing(invisibleStick, (-458, 2782, 0), 0);
			AddThing(invisibleStick, (-306, 3054, 0), 0);
			AddThing(invisibleStick, (-642, 2302, 0), 0);
			AddThing(invisibleStick, (-2496, 576, 0), 0);
			AddThing(invisibleStick, (-2346, 614, 0), 0);
			AddThing(invisibleStick, (-2618, 430, 0), 0);
			AddThing(invisibleStick, (-2434, 494, 0), 0);
			AddThing(invisibleStick, (-2274, 430, 0), 0);
			AddThing(invisibleStick, (-290, 2350, 0), 0);
			AddThing(invisibleStick, (-106, 2078, 0), 0);
			AddThing(invisibleStick, (118, 2110, 0), 0);
			AddThing(invisibleStick, (-50, 1558, 0), 0);
			AddThing(invisibleStick, (366, 2086, 0), 0);
			AddThing(invisibleStick, (534, 2310, 0), 0);
			AddThing(invisibleStick, (296, 1736, 0), 0);
			AddThing(invisibleStick, (838, 2286, 0), 0);
			AddThing(invisibleStick, (520, 1608, 0), 0);
			AddThing(invisibleStick, (830, 1974, 0), 0);
			AddThing(invisibleStick, (736, 1752, 0), 0);
			break;

		case '088F331310F54154443B15EE81AF8BFD': // strife1.wad map22 - Factory: Forge
		case '07B8629DEAE50991B3B372911EDC99D3': // sve.wad map22 - Factory: Forge
			AddThing(invisibleStick, (-507, 943, 0), 0);
			AddThing(invisibleStick, (158, -290, 0), 0);
			AddThing(invisibleStick, (558, 46, 0), 0);
			AddThing(invisibleStick, (142, -530, 0), 0);
			AddThing(invisibleStick, (606, -98, 0), 0);
			AddThing(invisibleStick, (510, -306, 0), 0);
			AddThing(invisibleStick, (176, -720, 0), 0);
			AddThing(invisibleStick, (148, -942, 0), 0);
			AddThing(invisibleStick, (110, -1074, 0), 0);
			AddThing(invisibleStick, (206, -1170, 0), 0);
			AddThing(invisibleStick, (398, -1106, 0), 0);
			AddThing(invisibleStick, (608, -1120, 0), 0);
			break;

		case '777F7085371D7020872E10089AADB764': // strife1.wad map23 - Order Commons
		case '13BDF7D41E33E302D21234316A600BBA': // sve.wad map23 - Order Commons
			AddThing(invisibleStick, (-408, -760, 0), 0);
			AddThing(invisibleStick, (-154, -714, 0), 0);
			AddThing(invisibleStick, (-290, -850, 0), 0);
			AddThing(invisibleStick, (-128, -1080, 0), 0);
			AddThing(invisibleStick, (-226, -1418, 0), 0);
			AddThing(invisibleStick, (142, -1330, 0), 0);
			AddThing(invisibleStick, (-26, -1474, 0), 0);
			AddThing(invisibleStick, (1462, -18, 0), 0);
			AddThing(invisibleStick, (-184, -1808, 0), 0);
			AddThing(invisibleStick, (118, -1618, 0), 0);
			AddThing(invisibleStick, (-1016, -2184, 0), 0);
			AddThing(invisibleStick, (-866, -2234, 0), 0);
			AddThing(invisibleStick, (-634, -2154, 0), 0);
			AddThing(invisibleStick, (-1048, -2328, 0), 0);
			AddThing(invisibleStick, (14, -1922, 0), 0);
			AddThing(invisibleStick, (-346, -2146, 0), 0);
			AddThing(invisibleStick, (-778, -2330, 0), 0);
			AddThing(invisibleStick, (-176, -2064, 0), 0);
			AddThing(invisibleStick, (-530, -2314, 0), 0);
			AddThing(invisibleStick, (-858, -2458, 0), 0);
			AddThing(invisibleStick, (-1018, -2530, 0), 0);
			AddThing(invisibleStick, (198, -2010, 0), 0);
			AddThing(invisibleStick, (-250, -2338, 0), 0);
			AddThing(invisibleStick, (-642, -2506, 0), 0);
			AddThing(invisibleStick, (-10, -2266, 0), 0);
			AddThing(invisibleStick, (-370, -2514, 0), 0);
			AddThing(invisibleStick, (398, -2226, 0), 0);
			AddThing(invisibleStick, (710, -2010, 0), 0);
			AddThing(invisibleStick, (174, -2442, 0), 0);
			AddThing(invisibleStick, (-106, -2722, 0), 0);
			AddThing(invisibleStick, (232, -2696, 0), 0);
			AddThing(invisibleStick, (536, -2520, 0), 0);
			AddThing(invisibleStick, (792, -2368, 0), 0);
			AddThing(invisibleStick, (1120, -2232, 0), 0);
			AddThing(invisibleStick, (760, -2736, 0), 0);
			AddThing(invisibleStick, (1024, -2664, 0), 0);
			break;

		case '935024573889AB8CD873A17B21041857': // strife1.wad map24 - Factory: Conversion Chapel
		case 'A1306ABECD39680421808E3FEE89A58E': // sve.wad map24 - Factory: Conversion Chapel
			AddThing(slime, (-1810, 110, 0), 0);
			AddThing(slime, (-1810, -274, 0), 0);
			AddThing(slime, (-1490, -146, 0), 0);
			AddThing(slime, (-1202, 110, 0), 0);
			AddThing(slime, (-1810, -658, 0), 0);
			AddThing(slime, (-1138, -274, 0), 0);
			AddThing(slime, (-1682, -882, 0), 0);
			AddThing(slime, (-1138, -658, 0), 0);
			AddThing(slime, (-1266, -882, 0), 0);
			AddThing(slime, (-1472, -1120, 0), 0);
			AddThing(invisibleStick, (-1778, 5582, 0), 0);
			AddThing(invisibleStick, (-1810, 5262, 0), 0);
			AddThing(invisibleStick, (-1554, 5614, 0), 0);
			AddThing(invisibleStick, (-1874, 4974, 0), 0);
			AddThing(invisibleStick, (-1522, 5422, 0), 0);
			AddThing(invisibleStick, (-1298, 5582, 0), 0);
			AddThing(invisibleStick, (-1522, 5038, 0), 0);
			AddThing(invisibleStick, (-1266, 5230, 0), 0);
			AddThing(invisibleStick, (-1504, 4704, 0), 0);
			AddThing(invisibleStick, (-1170, 5006, 0), 0);
			break;

		case '08A5B44623FFF504462EDC1CA36B1997': // strife1.wad map25 - Catacombs: Ruined Temple
		case 'A35CD1D869B0473249E7F23FA925517A': // sve.wad map25 - Catacombs: Ruined Temple
			AddThing(invisibleStick, (2318, 2414, 0), 0);
			AddThing(invisibleStick, (2310, 2302, 0), 0);
			AddThing(invisibleStick, (2318, 2134, 0), 0);
			AddThing(invisibleStick, (2310, 1966, 0), 0);
			AddThing(invisibleStick, (2302, 1806, 0), 0);
			AddThing(invisibleStick, (3336, 1744, 0), 0);
			break;

		case '85D7183042B90FCC7CCC820FE2FA7B77': // strife1.wad map26 - Proving Grounds
		case '27F31A6F186F2C928EF6E5450D1B891D': // sve.wad map26 - Proving Grounds
			AddThing(invisibleStick, (1606, 3110, 0), 0);
			AddThing(invisibleStick, (1582, 2942, 0), 0);
			AddThing(invisibleStick, (1574, 2750, 0), 0);
			AddThing(invisibleStick, (1566, 2558, 0), 0);
			AddThing(invisibleStick, (1598, 2366, 0), 0);
			AddThing(invisibleStick, (2054, 3126, 0), 0);
			AddThing(invisibleStick, (2046, 2950, 0), 0);
			AddThing(invisibleStick, (2062, 2758, 0), 0);
			AddThing(invisibleStick, (1830, 2334, 0), 0);
			AddThing(invisibleStick, (142, 678, 0), 0);
			AddThing(invisibleStick, (2070, 2550, 0), 0);
			AddThing(invisibleStick, (2022, 2358, 0), 0);
			AddThing(invisibleStick, (144, 376, 0), 0);
			break;

		case 'BAF651138A21FB03AB920FA626F6E64D': // strife1.wad map27 - The Lab
		case '455893D08E0AF4C0A8D50FE8A4B865A3': // sve.wad map27 - The Lab
			AddThing(invisibleStick, (2216, 696, 0), 0);
			AddThing(invisibleStick, (2350, 926, 0), 0);
			AddThing(invisibleStick, (2318, 710, 0), 0);
			AddThing(invisibleStick, (2486, 878, 0), 0);
			AddThing(invisibleStick, (2368, 480, 0), 0);
			AddThing(invisibleStick, (2614, 926, 0), 0);
			AddThing(invisibleStick, (2494, 518, 0), 0);
			AddThing(invisibleStick, (2680, 720, 0), 0);
			AddThing(invisibleStick, (2614, 502, 0), 0);
			AddThing(invisibleStick, (2782, 702, 0), 0);
			break;

		case '252AF75417C87B680AD2CA48E52DC716': // strife1.wad map30 - Abandoned Front Base
		case 'C45DCE904B6D4F9AC76B025499D9281E': // sve.wad map30 - Abandoned Front Base
			AddThing(invisibleStick, (-6098, 1870, 0), 0);
			AddThing(invisibleStick, (-5792, 1952, 0), 0);
			AddThing(invisibleStick, (-6080, 1632, 0), 0);
			AddThing(invisibleStick, (-5874, 1742, 0), 0);
			break;

		case 'BA63176C687188C5C847306B3F516D3A': // strife1.wad map31 - Training Facility
		case 'F023F94C61827861776C63288BB93649': // sve.wad map31 - Training Facility
			AddThing(slime, (1840, -96, 0), 0);
			AddThing(slime, (1798, -218, 0), 0);
			AddThing(slime, (1870, -162, 0), 0);
			AddThing(slime, (1998, -106, 0), 0);
			AddThing(slime, (2440, 496, 0), 0);
			AddThing(slime, (2150, -82, 0), 0);
			AddThing(slime, (2030, -234, 0), 0);
			AddThing(slime, (2094, -170, 0), 0);
			AddThing(slime, (2478, 358, 0), 0);
			AddThing(slime, (2254, -114, 0), 0);
			AddThing(slime, (2486, 182, 0), 0);
			AddThing(slime, (2150, -282, 0), 0);
			AddThing(slime, (2278, -354, 0), 0);
			AddThing(slime, (2846, 374, 0), 0);
			AddThing(slime, (2912, 512, 0), 0);
			AddThing(slime, (2902, 198, 0), 0);
			break;

		case 'F78F92E830CF340E6D2277E8D5D74081': // sve.wad map35 - Factory: Production (super secret level)
			AddThing(invisibleStick, (-914, 1822, 0), 0);
			AddThing(invisibleStick, (-706, 2070, 0), 0);
			AddThing(invisibleStick, (-706, 1838, 0), 0);
			AddThing(invisibleStick, (-746, 1526, 0), 0);
			AddThing(invisibleStick, (-256, 2312, 0), 0);
			AddThing(invisibleStick, (-162, 2446, 0), 0);
			AddThing(invisibleStick, (-776, 1312, 0), 0);
			AddThing(invisibleStick, (-162, 2158, 0), 0);
			AddThing(invisibleStick, (-64, 2296, 0), 0);
			AddThing(invisibleStick, (-610, 1270, 0), 0);
			AddThing(invisibleStick, (-682, 1014, 0), 0);
			AddThing(invisibleStick, (-450, 1046, 0), 0);
			AddThing(invisibleStick, (414, 2078, 0), 0);
			AddThing(invisibleStick, (-170, 1022, 0), 0);
			AddThing(invisibleStick, (414, 1822, 0), 0);
			AddThing(invisibleStick, (94, 1030, 0), 0);
			AddThing(invisibleStick, (278, 1254, 0), 0);
			AddThing(invisibleStick, (422, 1494, 0), 0);
			AddThing(invisibleStick, (630, 1822, 0), 0);
			AddThing(invisibleStick, (302, 1070, 0), 0);
			AddThing(invisibleStick, (480, 1328, 0), 0);
			AddThing(invisibleStick, (-146, -482, 0), 0);
			AddThing(invisibleStick, (118, -522, 0), 0);
			AddThing(invisibleStick, (48, -608, 0), 0);
			AddThing(invisibleStick, (-58, -738, 0), 0);
			AddThing(invisibleStick, (-506, -1042, 0), 0);
			AddThing(invisibleStick, (-602, -1098, 0), 0);
			AddThing(invisibleStick, (-322, -1034, 0), 0);
			AddThing(invisibleStick, (-394, -1114, 0), 0);
			AddThing(invisibleStick, (40, -872, 0), 0);
			AddThing(invisibleStick, (-16, -976, 0), 0);
			AddThing(invisibleStick, (-96, -1088, 0), 0);
			AddThing(invisibleStick, (118, -1114, 0), 0);
			AddThing(invisibleStick, (-650, -1554, 0), 0);
			AddThing(invisibleStick, (-650, -1674, 0), 0);
			AddThing(invisibleStick, (-146, -1474, 0), 0);
			AddThing(invisibleStick, (-226, -1546, 0), 0);
			AddThing(invisibleStick, (-146, -1610, 0), 0);
			AddThing(invisibleStick, (62, -1530, 0), 0);
			AddThing(invisibleStick, (-98, -1762, 0), 0);
			AddThing(invisibleStick, (166, -1650, 0), 0);
			AddThing(invisibleStick, (54, -1754, 0), 0);
			AddThing(invisibleStick, (326, -1714, 0), 0);
			AddThing(invisibleStick, (-546, -2226, 0), 0);
			AddThing(invisibleStick, (96, -2032, 0), 0);
			AddThing(invisibleStick, (-26, -2122, 0), 0);
			AddThing(invisibleStick, (-498, -2402, 0), 0);
			AddThing(invisibleStick, (294, -2090, 0), 0);
			AddThing(invisibleStick, (-58, -2306, 0), 0);
			AddThing(invisibleStick, (-514, -2514, 0), 0);
			AddThing(invisibleStick, (-298, -2498, 0), 0);
			AddThing(invisibleStick, (-72, -2552, 0), 0);
			AddThing(invisibleStick, (96, -2592, 0), 0);
			break;
		}
	}

	//===========================================================================
	//
	//
	//
	//===========================================================================

	void SpawnTavernAmbience(Name checksum, String mapname)
	{
		int t;
		int p;

		// place tavern ambience and assign an NPC to it (via TID) for sound volume functions
		int tid = 5555500;

		switch (checksum)
		{
		default:
		case 'none':
			return;

		case '22DC1F95CD9A03D23467FD638264FFBC': // strife1.wad map02 - Town
		case 'A4ABA612A8FE682787DEBEAF70637836': // sve.wad map02 - Town
			t = AddThing(15555, (2120, 4640, 16), 0); tid++; SetThingID(t, tid); SetThingID(73, tid);
			t = AddThing(15555, (2040, 4472, 0), 0); tid++; SetThingID(t, tid); SetThingID(68, tid);
			t = AddThing(15555, (1984, 4248, 32), 0); tid++; SetThingID(t, tid); SetThingID(90, tid);
			t = AddThing(15555, (2592, 4256, 35), 0); tid++; SetThingID(t, tid); SetThingID(91, tid);
			t = AddThing(15555, (2592, 4416, 0), 0); tid++; SetThingID(t, tid); SetThingID(113, tid);
			t = AddThing(15555, (2576, 4704, 24), 0); tid++; SetThingID(t, tid); SetThingID(92, tid);
			t = AddThing(15555, (2208, 4704, 50), 0); tid++; SetThingID(t, tid); SetThingID(72, tid);
			t = AddThing(15555, (2312, 4440, 20), 0); tid++; SetThingID(t, tid); SetThingID(71, tid);
			break;

		case '777F7085371D7020872E10089AADB764': // strife1.wad map23 - Order Commons
		case '13BDF7D41E33E302D21234316A600BBA': // sve.wad map23 - Order Commons
			t = AddThing(15555, (2176, 320, 32), 0); tid++; SetThingID(t, tid); SetThingID(383, tid);
			t = AddThing(15555, (2176, 192, 32), 0); tid++; SetThingID(t, tid); SetThingID(341, tid);
			t = AddThing(15555, (1920, 256, 48), 0); tid++; SetThingID(t, tid); SetThingID(342, tid);
			t = AddThing(15555, (2080, 128, 56), 0); tid++; SetThingID(t, tid); SetThingID(340, tid);
			t = AddThing(15555, (2304, 192, 72), 0); tid++; SetThingID(t, tid); SetThingID(396, tid);
			t = AddThing(15555, (1920, 64, 64), 0); tid++; SetThingID(t, tid); SetThingID(390, tid);
			t = AddThing(15555, (2080, -128, 56), 0); tid++; SetThingID(t, tid); SetThingID(392, tid);
			t = AddThing(15555, (2272, -128, 48), 0); tid++; SetThingID(t, tid); SetThingID(395, tid);
			t = AddThing(15555, (2048, -448, 48), 0); tid++; SetThingID(t, tid); SetThingID(349, tid);
			t = AddThing(15555, (2208, -224, 88), 0); tid++; SetThingID(t, tid); SetThingID(399, tid);
			t = AddThing(15555, (2272, -352, 24), 0); tid++; SetThingID(t, tid); SetThingID(348, tid);
			break;
		}
	}

	//===========================================================================
	//
	//
	//
	//===========================================================================

	void FixMaps(Name checksum, String mapname)
	{
		switch (checksum)
		{
		default:
		case 'none':
			return;

		case '22DC1F95CD9A03D23467FD638264FFBC': // strife1.wad map02 - Town
		case 'A4ABA612A8FE682787DEBEAF70637836': // sve.wad map02 - Town
			// get rid of misplaced lamp in the void (only in the vanilla IWAD though)
			if (checksum == '22DC1F95CD9A03D23467FD638264FFBC')
				SetThingEdNum(260, 0);
			break;

		case '4A79D4C48352804FAB3557EE423ADAFE': // strife1.wad map07 - Castle
		case 'ECB3421D4C79C67EBC9342E0579F8804': // sve.wad map07 - Castle
			// Fix missing textures on the platform just before the entrance to The Programmer's Keep
			SetWallTexture(2778, Line.back, Side.bottom, "CONCRT01");
			SetWallTexture(2779, Line.back, Side.bottom, "CONCRT01");
			SetWallTexture(2780, Line.back, Side.bottom, "CONCRT01");
			SetWallTexture(2781, Line.back, Side.bottom, "CONCRT01");
			SetLineFlags(2778, Line.ML_DONTPEGTOP | Line.ML_DONTPEGBOTTOM);
			SetLineFlags(2779, Line.ML_DONTPEGTOP | Line.ML_DONTPEGBOTTOM);
			SetLineFlags(2780, Line.ML_DONTPEGTOP | Line.ML_DONTPEGBOTTOM);
			SetLineFlags(2781, Line.ML_DONTPEGTOP | Line.ML_DONTPEGBOTTOM);
			break;

		case '28CB8D6614024C51C8DB00C7ADBFD857': // strife1.wad map11 - Borderlands
		case '1097B8706E00273294389D1FEB5E94A5': // sve.wad map11 - Borderlands
			// Fix New Front Base teleporter flat offset
			Level.Sectors[224].AddXOffset(Sector.floor, -24.0);
			break;

		case 'E3E6ABE44B1C034F19385AD1B19BEC97': // strife1.wad map16 - Fortress: Bishop's Tower
		case '900B1CAC3AB7DF6C2FFB5C429C523FB7': // sve.wad map16 - Fortress: Bishop's Tower
			// Fix missing textures
			SetWallTexture(2827, Line.back, Side.bottom, "AZWAL04");
			SetWallTexture(2660, Line.back, Side.bottom, "AZWAL04");
			break;

		case '1240E48EE30E52D7742DC3785BC0C919': // strife1.wad map19 - Fortress: Security Complex
		case '5215723CBF14B74A0CB901473434576B': // sve.wad map19 - Fortress: Security Complex
			// Fix dead end caused by exiting Administration before destroying the computer
			// https://doomwiki.org/wiki/Strife_dead_ends#Leave_Administration_early
			// Just get rid of the barriers that prevent backtracking from The Bailey
			SetLineSpecial(2249, 0);
			OffsetSectorPlane(8, Sector.ceiling, 8);
			SetSectorTexture(8, Sector.ceiling, "F_GENTAN");
			OffsetSectorPlane(10, Sector.ceiling, 8);
			SetSectorTexture(10, Sector.ceiling, "F_GENTAN");
			ClearSectorTags(8);
			ClearSectorTags(10);
			SetLineSpecial(1723, 0);
			SetLineSpecial(1887, 0);
			break;

		case '252AF75417C87B680AD2CA48E52DC716': // strife1.wad map30 - Abandoned Front Base
		case 'C45DCE904B6D4F9AC76B025499D9281E': // sve.wad map30 - Abandoned Front Base
			// Fix prison teleporter flat offset
			Level.Sectors[38].AddXOffset(Sector.floor, 32.0);
			break;

		case '840DE1C6C218D9C367E930C89EBDC40A': // strife1.wad map28 - Alien Ship
		case '43320A6C4547B8D4A5F3BAD28B00EA25': // sve.wad map28 - Alien Ship
			// Fix that one broken teleporter flat offset
			// (this teleporter is actually only accessible in deathmatch... whatever...)
			Level.Sectors[84].AddYOffset(Sector.floor, 32.0);
			break;
		}
	}
}
