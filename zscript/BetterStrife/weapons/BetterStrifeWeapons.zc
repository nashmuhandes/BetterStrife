// Copyright 2021 - 2024 Nash Muhandes
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
//
// 1. Redistributions of source code must retain the above copyright
//    notice, this list of conditions and the following disclaimer.
// 2. Redistributions in binary form must reproduce the above copyright
//    notice, this list of conditions and the following disclaimer in the
//    documentation and/or other materials provided with the distribution.
// 3. The name of the author may not be used to endorse or promote products
//    derived from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
// IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
// OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
// IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
// NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
// THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

// Faster weapon switching speed for snappier gameplay!
const BETTERSTRIFE_WPNSWITCHSPEED = 20;

//===========================================================================
//
// BetterStrifePunchDagger
//
//===========================================================================

class BetterStrifePunchDagger : PunchDagger
{
	Default
	{
		Weapon.SlotNumber 1;
	}

	private action void A_BetterJabDagger(void)
	{
		A_JabDagger();
		BetterStrifePlayerPlugin.AddViewKick(invoker.Owner, -3.0);
	}

	States
	{
	Deselect:
		PNCH A 1 A_Lower(BETTERSTRIFE_WPNSWITCHSPEED);
		Loop;
	Select:
		PNCH A 1 A_Raise(BETTERSTRIFE_WPNSWITCHSPEED);
		Loop;
	Fire:
		PNCH B 4;
		PNCH C 4 A_BetterJabDagger();
		PNCH D 5;
		PNCH C 4;
		PNCH B 5 A_ReFire();
		Goto Ready;
	}
}

//===========================================================================
//
// BetterStrifeStrifeCrossbow
//
//===========================================================================

class BetterStrifeStrifeCrossbow : StrifeCrossbow replaces StrifeCrossbow
{
	Default
	{
		Weapon.SisterWeapon "BetterStrifeStrifeCrossbow2";
		Weapon.SlotNumber 2;
	}

	private action void A_BetterFireArrow(void)
	{
		A_FireArrow("ElectricBolt");
		BetterStrifePlayerPlugin.AddViewKick(invoker.Owner, -5.0);
	}

	States
	{
	Deselect:
		XBOW A 1 A_Lower(BETTERSTRIFE_WPNSWITCHSPEED);
		Loop;
	Select:
		XBOW A 1 A_Raise(BETTERSTRIFE_WPNSWITCHSPEED);
		Loop;
	Fire:
		XBOW A 3 A_ClearFlash();
		XBOW B 6 A_BetterFireArrow();
		XBOW C 4;
		XBOW D 6;
		XBOW E 3;
		XBOW F 5;
		XBOW G 0 A_ShowElectricFlash();
		XBOW G 5 A_CheckReload();
		Goto Ready + 1;
	}
}

//===========================================================================
//
// BetterStrifeStrifeCrossbow2
//
//===========================================================================

class BetterStrifeStrifeCrossbow2 : StrifeCrossbow2 replaces StrifeCrossbow2
{
	Default
	{
		Weapon.SisterWeapon "BetterStrifeStrifeCrossbow";
		Weapon.SlotNumber 2;
	}

	private action void A_BetterFireArrow(void)
	{
		A_FireArrow("PoisonBolt");
		BetterStrifePlayerPlugin.AddViewKick(invoker.Owner, -5.0);
	}

	States
	{
	Deselect:
		XBOW H 1 A_Lower(BETTERSTRIFE_WPNSWITCHSPEED);
		Loop;
	Select:
		XBOW H 1 A_Raise(BETTERSTRIFE_WPNSWITCHSPEED);
		Loop;
	Fire:
		XBOW H 3;
		XBOW B 6 A_BetterFireArrow();
		XBOW C 4;
		XBOW D 6;
		XBOW E 3;
		XBOW I 5;
		XBOW J 5 A_CheckReload();
		Goto Ready;
	}
}

//===========================================================================
//
// BetterStrifeAssaultGun
//
//===========================================================================

class BetterStrifeAssaultGun : AssaultGun replaces AssaultGun
{
	Default
	{
		Decal "BulletChip";
		Weapon.SlotNumber 3;
	}

	private action void A_BetterFireAssaultGun(void)
	{
		A_FireAssaultGun();
		BetterStrifePlayerPlugin.AddViewKick(invoker.Owner, -2.0);
	}

	States
	{
	Deselect:
		RIFG B 1 A_Lower(BETTERSTRIFE_WPNSWITCHSPEED);
		Loop;
	Select:
		RIFG A 1 A_Raise(BETTERSTRIFE_WPNSWITCHSPEED);
		Loop;
	Fire:
		RIFF AB 3 A_BetterFireAssaultGun();
		RIFG D 3 A_BetterFireAssaultGun();
		RIFG C 0 A_ReFire();
		RIFG B 2 A_Light0();
		Goto Ready;
	}
}

//===========================================================================
//
// BetterStrifeMiniMissileLauncher
//
//===========================================================================

class BetterStrifeMiniMissileLauncher : MiniMissileLauncher replaces MiniMissileLauncher
{
	Default
	{
		Weapon.SlotNumber 4;
	}

	private action void A_BetterFireMiniMissile(void)
	{
		A_FireMiniMissile();
		BetterStrifePlayerPlugin.AddViewKick(invoker.Owner, -6.0);
	}

	States
	{
	Deselect:
		MMIS A 1 A_Lower(BETTERSTRIFE_WPNSWITCHSPEED);
		Loop;
	Select:
		MMIS A 1 A_Raise(BETTERSTRIFE_WPNSWITCHSPEED);
		Loop;
	Fire:
		MMIS A 4 A_BetterFireMiniMissile();
		MMIS B 4 A_Light1();
		MMIS C 5 Bright;
		MMIS D 2 Bright A_Light2();
		MMIS E 2 Bright;
		MMIS F 2 Bright A_Light0();
		MMIS F 0 A_ReFire();
		Goto Ready;
	}
}

//===========================================================================
//
// BetterStrifeStrifeGrenadeLauncher
//
//===========================================================================

class BetterStrifeStrifeGrenadeLauncher : StrifeGrenadeLauncher replaces StrifeGrenadeLauncher
{
	Default
	{
		Weapon.SisterWeapon "BetterStrifeStrifeGrenadeLauncher2";
		Weapon.SlotNumber 5;
	}

	private action void A_BetterFireGrenade(class<Actor> grenadetype, double angleofs, statelabel flash)
	{
		A_FireGrenade(grenadetype, angleofs, flash);
		BetterStrifePlayerPlugin.AddViewKick(invoker.Owner, -6.0);
	}

	States
	{
	Deselect:
		GREN A 1 A_Lower(BETTERSTRIFE_WPNSWITCHSPEED);
		Loop;
	Select:
		GREN A 1 A_Raise(BETTERSTRIFE_WPNSWITCHSPEED);
		Loop;
	Fire:
		GREN A 5 A_BetterFireGrenade("HEGrenade", -90, "Flash");
		GREN B 10;
		GREN A 5 A_BetterFireGrenade("HEGrenade",  90, "Flash2");
		GREN C 10;
		GREN A 0 A_ReFire;
		Goto Ready;
	}
}

//===========================================================================
//
// BetterStrifeStrifeGrenadeLauncher2
//
//===========================================================================

class BetterStrifeStrifeGrenadeLauncher2 : StrifeGrenadeLauncher2 replaces StrifeGrenadeLauncher2
{
	Default
	{
		Weapon.SisterWeapon "BetterStrifeStrifeGrenadeLauncher";
		Weapon.SlotNumber 5;
	}

	private action void A_BetterFireGrenade(class<Actor> grenadetype, double angleofs, statelabel flash)
	{
		A_FireGrenade(grenadetype, angleofs, flash);
		BetterStrifePlayerPlugin.AddViewKick(invoker.Owner, -6.0);
	}

	States
	{
	Deselect:
		GREN D 1 A_Lower(BETTERSTRIFE_WPNSWITCHSPEED);
		Loop;
	Select:
		GREN D 1 A_Raise(BETTERSTRIFE_WPNSWITCHSPEED);
		Loop;
	Fire:
		GREN D 5 A_BetterFireGrenade("PhosphorousGrenade", -90, "Flash");
		GREN E 10;
		GREN D 5 A_BetterFireGrenade("PhosphorousGrenade",  90, "Flash2");
		GREN F 10;
		GREN A 0 A_ReFire;
		Goto Ready;
	}
}

//===========================================================================
//
// BetterStrifeFlameThrower
//
//===========================================================================

class BetterStrifeFlameThrower : FlameThrower replaces FlameThrower
{
	Default
	{
		Weapon.SlotNumber 6;
	}

	States
	{
	Deselect:
		FLMT A 1 A_Lower(BETTERSTRIFE_WPNSWITCHSPEED);
		Loop;
	Select:
		FLMT A 1 A_Raise(BETTERSTRIFE_WPNSWITCHSPEED);
		Loop;
	}
}

//===========================================================================
//
// BetterStrifeMauler
//
//===========================================================================

class BetterStrifeMauler : Mauler replaces Mauler
{
	Default
	{
		Weapon.SisterWeapon "BetterStrifeMauler2";
		Weapon.SlotNumber 7;
	}

	private action void A_BetterFireMauler1(void)
	{
		A_FireMauler1();
		BetterStrifePlayerPlugin.AddViewKick(invoker.Owner, -10.0);
	}

	States
	{
	Deselect:
		MAUL A 1 A_Lower(BETTERSTRIFE_WPNSWITCHSPEED);
		Loop;
	Select:
		MAUL A 1 A_Raise(BETTERSTRIFE_WPNSWITCHSPEED);
		Loop;
	Fire:
		BLSF A 5 Bright A_BetterFireMauler1();
		MAUL B 3 Bright A_Light1();
		MAUL C 2 A_Light2();
		MAUL DE 2;
		MAUL A 7 A_Light0();
		MAUL H 7;
		MAUL G 7 A_CheckReload();
		Goto Ready;
	}
}

//===========================================================================
//
// BetterStrifeMauler2
//
//===========================================================================

class BetterStrifeMauler2 : Mauler2 replaces Mauler2
{
	Default
	{
		Weapon.SisterWeapon "BetterStrifeMauler";
		Weapon.SlotNumber 7;
	}

	private action void A_BetterFireMauler2(void)
	{
		A_FireMauler2();
		BetterStrifePlayerPlugin.AddViewKick(invoker.Owner, -10.0);
	}

	States
	{
	Deselect:
		MAUL I 1 A_Lower(BETTERSTRIFE_WPNSWITCHSPEED);
		Loop;
	Select:
		MAUL I 1 A_Raise(BETTERSTRIFE_WPNSWITCHSPEED);
		Loop;
	Fire:
		MAUL I 20 A_FireMauler2Pre();
		MAUL J 10 A_Light1();
		BLSF A 10 Bright A_BetterFireMauler2();
		MAUL B 10 Bright A_Light2();
		MAUL C 2;
		MAUL D 2 A_Light0();
		MAUL E 2 A_ReFire();
		Goto Ready;
	}
}

//===========================================================================
//
// BetterStrifeSigil
//
//===========================================================================

class BetterStrifeSigil : Sigil replaces Sigil
{
	Default
	{
		Weapon.SlotNumber 8;
	}

	//============================================================================
	//
	// ASigil :: HandlePickup
	//
	//============================================================================

	override bool HandlePickup(Inventory item)
	{
		if (item is "BetterStrifeSigil")
		{
			int otherPieces = item.health;
			if (otherPieces > health)
			{
				item.bPickupGood = true;
				Icon = item.Icon;
				// If the player is holding the Sigil right now, drop it and bring
				// it back with the new piece(s) in view.
				if (Owner.player != NULL && Owner.player.ReadyWeapon == self)
				{
					DownPieces = health;
					Owner.player.PendingWeapon = self;
				}
				health = otherPieces;
			}
			return true;
		}
		return false;
	}

	//============================================================================
	//
	// ASigil :: CreateCopy
	//
	//============================================================================

	override Inventory CreateCopy(Actor other)
	{
		BetterStrifeSigil copy = BetterStrifeSigil(Spawn("BetterStrifeSigil"));
		copy.Amount = Amount;
		copy.MaxAmount = MaxAmount;
		copy.health = health;
		copy.Icon = Icon;
		GoAwayAndDie();
		return copy;
	}

	//============================================================================
	//
	// ASigil :: SpecialDropAction
	//
	// Monsters don't drop Sigil pieces. The Sigil pieces grab hold of the person
	// who killed the dropper and automatically enter their inventory. That's the
	// way it works if you believe Macil, anyway...
	//
	//============================================================================

	override bool SpecialDropAction(Actor dropper)
	{
		// Give a Sigil piece to every player in the game
		for (int i = 0; i < MAXPLAYERS; ++i)
		{
			if (playeringame[i] && players[i].mo != NULL)
			{
				GiveBetterSigilPiece(players[i].mo);
				Destroy();
			}
		}
		return true;
	}

	//============================================================================
	//
	// ASigil :: GiveSigilPiece
	//
	// Gives the actor another Sigil piece, up to 5. Returns the number of Sigil
	// pieces the actor previously held.
	//
	//============================================================================

	static int GiveBetterSigilPiece(Actor receiver)
	{
		BetterStrifeSigil sigl = BetterStrifeSigil(receiver.FindInventory("BetterStrifeSigil"));
		if (sigl == NULL)
		{
			sigl = BetterStrifeSigil(Spawn("BetterStrifeSigil1"));
			if (!sigl.CallTryPickup (receiver))
			{
				sigl.Destroy ();
			}
			return 0;
		}
		else if (sigl.health < 5)
		{
			++sigl.health;
			static const class<BetterStrifeSigil> sigils[] =
			{
				"BetterStrifeSigil1", "BetterStrifeSigil2", "BetterStrifeSigil3", "BetterStrifeSigil4", "BetterStrifeSigil5"
			};
			sigl.Icon = GetDefaultByType(sigils[clamp(sigl.health, 1, 5)-1]).Icon;
			// If the player has the Sigil out, drop it and bring it back up.
			if (sigl.Owner.player != NULL && sigl.Owner.player.ReadyWeapon == sigl)
			{
				sigl.Owner.player.PendingWeapon = sigl;
				sigl.DownPieces = sigl.health - 1;
			}
			return sigl.health - 1;
		}
		else
		{
			return 5;
		}
	}

	States(Weapon)
	{
	Deselect:
		SIGH A 1 Bright A_SelectSigilDown();
		Wait;
		SIGH A 1 Bright A_Lower(BETTERSTRIFE_WPNSWITCHSPEED);
		Wait;
		SIGH B 1 Bright A_Lower(BETTERSTRIFE_WPNSWITCHSPEED);
		Wait;
		SIGH C 1 Bright A_Lower(BETTERSTRIFE_WPNSWITCHSPEED);
		Wait;
		SIGH D 1 Bright A_Lower(BETTERSTRIFE_WPNSWITCHSPEED);
		Wait;
		SIGH E 1 Bright A_Lower(BETTERSTRIFE_WPNSWITCHSPEED);
		Wait;
	Select:
		SIGH A 1 Bright A_SelectSigilView();
		Wait;
		SIGH A 1 Bright A_Raise(BETTERSTRIFE_WPNSWITCHSPEED);
		Wait;
		SIGH B 1 Bright A_Raise(BETTERSTRIFE_WPNSWITCHSPEED);
		Wait;
		SIGH C 1 Bright A_Raise(BETTERSTRIFE_WPNSWITCHSPEED);
		Wait;
		SIGH D 1 Bright A_Raise(BETTERSTRIFE_WPNSWITCHSPEED);
		Wait;
		SIGH E 1 Bright A_Raise(BETTERSTRIFE_WPNSWITCHSPEED);
		Wait;

	Fire:
		SIGH A 0 Bright A_SelectSigilAttack();

		SIGH A 18 Bright A_SigilCharge();
		SIGH A 3 Bright A_GunFlash();
		SIGH A 10 { A_FireSigil1(); BetterStrifePlayerPlugin.AddViewKick(invoker.Owner, -16.0); }
		SIGH A 5;
		Goto Ready;

		SIGH B 18 Bright A_SigilCharge();
		SIGH B 3 Bright A_GunFlash();
		SIGH B 10 { A_FireSigil2(); BetterStrifePlayerPlugin.AddViewKick(invoker.Owner, -16.0); }
		SIGH B 5;
		Goto Ready;

		SIGH C 18 Bright A_SigilCharge();
		SIGH C 3 Bright A_GunFlash();
		SIGH C 10 { A_FireSigil3(); BetterStrifePlayerPlugin.AddViewKick(invoker.Owner, -16.0); }
		SIGH C 5;
		Goto Ready;

		SIGH D 18 Bright A_SigilCharge();
		SIGH D 3 Bright A_GunFlash();
		SIGH D 10 { A_FireSigil4(); BetterStrifePlayerPlugin.AddViewKick(invoker.Owner, -16.0); }
		SIGH D 5;
		Goto Ready;

		SIGH E 18 Bright A_SigilCharge();
		SIGH E 3 Bright A_GunFlash();
		SIGH E 10 { A_FireSigil5(); BetterStrifePlayerPlugin.AddViewKick(invoker.Owner, -16.0); }
		SIGH E 5;
		Goto Ready;
	}
}

//===========================================================================
//
// BetterStrifeSigil1
//
//===========================================================================

class BetterStrifeSigil1 : BetterStrifeSigil replaces Sigil1
{
	Default
	{
		Inventory.Icon "I_SGL1";
		Health 1;
	}
}

//===========================================================================
//
// BetterStrifeSigil2
//
//===========================================================================

class BetterStrifeSigil2 : BetterStrifeSigil replaces Sigil2
{
	Default
	{
		Inventory.Icon "I_SGL2";
		Health 2;
	}
}

//===========================================================================
//
// BetterStrifeSigil3
//
//===========================================================================

class BetterStrifeSigil3 : BetterStrifeSigil replaces Sigil3
{
	Default
	{
		Inventory.Icon "I_SGL3";
		Health 3;
	}
}

//===========================================================================
//
// BetterStrifeSigil4
//
//===========================================================================

class BetterStrifeSigil4 : BetterStrifeSigil replaces Sigil4
{
	Default
	{
		Inventory.Icon "I_SGL4";
		Health 4;
	}
}

//===========================================================================
//
// BetterStrifeSigil5
//
//===========================================================================

class BetterStrifeSigil5 : BetterStrifeSigil replaces Sigil5
{
	Default
	{
		Inventory.Icon "I_SGL5";
		Health 5;
	}
}
